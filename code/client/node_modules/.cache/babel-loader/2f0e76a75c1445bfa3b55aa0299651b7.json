{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\api\\\\log\\\\status.js\";\nimport { get } from '../../utils/request';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Route from '../../config/RouteConfig';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(store) {\n    var college_status, student_status, student_data, papers;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Promise.all([_asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return get('api/college/login/status/v1');\n\n                    case 2:\n                      return _context.abrupt(\"return\", college_status = _context.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))(), _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2() {\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return get('api/loginStatus');\n\n                    case 2:\n                      return _context2.abrupt(\"return\", student_status = _context2.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }))()]);\n\n          case 2:\n            console.log('loginStatus', college_status, student_status);\n\n            if (college_status.status === 'succeed') {\n              store.state = _objectSpread({}, college_status, {\n                status: 'college',\n                userName: college_status.name\n              });\n              window.navigateTo(Route.College.route);\n            } else if (student_status.status === 'succeed') {\n              student_data = student_status.data.stu_info;\n              store.state = _objectSpread({}, student_data, {\n                status: 'student',\n                userName: student_data.real_name\n              });\n              store.infoList.mypaper = new Array(3).fill([]);\n              papers = student_status.data.papers;\n              Object.keys(papers).forEach(function (p) {\n                var data = papers[p];\n                if (data.status != '已结束' && data.tested_time - data.test_time < 0) store.infoList.mypaper[0].push([data.name, React.createElement(Link, {\n                  onClick: store.request('exam/get', {\n                    paper_id: data.id,\n                    title: data.name,\n                    tip: data.tip\n                  }),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 35\n                  },\n                  __self: this\n                }, \"\\u53C2\\u52A0\\u8003\\u8BD5 \"), data.test_time - data.tested_time, data.score]);else store.infoList.mypaper[1].push([data.name, data.stu_status, data.tested_time, data.score]);\n              });\n              window.navigateTo(Route.Student.route);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\log\\status.js"],"names":["get","React","Link","Route","store","Promise","all","college_status","student_status","console","log","status","state","userName","name","window","navigateTo","College","route","student_data","data","stu_info","real_name","infoList","mypaper","Array","fill","papers","Object","keys","forEach","p","tested_time","test_time","push","request","paper_id","id","title","tip","score","stu_status","Student"],"mappings":"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","sourcesContent":["import { get } from '../../utils/request'\r\nimport React from 'react'\r\nimport {\r\n    Link\r\n} from 'react-router-dom'\r\nimport Route from '../../config/RouteConfig'\r\n\r\nexport default async store => {\r\n  let college_status, student_status\r\n  await Promise.all([\r\n    (async () => college_status = await get('api/college/login/status/v1'))(),\r\n    (async () => student_status = await get('api/loginStatus'))()\r\n  ])\r\n  console.log('loginStatus', college_status, student_status)\r\n  if(college_status.status === 'succeed'){\r\n    store.state = {\r\n      ...college_status,\r\n      status: 'college',\r\n      userName: college_status.name\r\n    }\r\n    window.navigateTo(Route.College.route)\r\n  } else if(student_status.status === 'succeed'){\r\n    let student_data = student_status.data.stu_info\r\n    store.state = {\r\n      ...student_data ,\r\n      status: 'student',\r\n      userName: student_data.real_name\r\n    }\r\n    store.infoList.mypaper = new Array(3).fill([])\r\n    let papers = student_status.data.papers\r\n    Object.keys(papers)\r\n        .forEach(p => {\r\n            let data = papers[p]\r\n            if (data.status != '已结束' && data.tested_time - data.test_time < 0)\r\n                store.infoList.mypaper[0].push([data.name, <Link onClick={store.request('exam/get', { paper_id: data.id, title: data.name, tip: data.tip })}>参加考试 </Link>, data.test_time - data.tested_time, data.score])\r\n            else\r\n                store.infoList.mypaper[1].push([data.name, data.stu_status, data.tested_time, data.score])\r\n    })\r\n    window.navigateTo(Route.Student.route)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}