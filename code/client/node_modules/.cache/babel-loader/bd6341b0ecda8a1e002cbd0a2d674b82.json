{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\api\\\\excel\\\\loadinStudent.js\";\nimport React from 'react';\nimport XLSX from 'xlsx';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(store, getFile) {\n    var file, res, parseFromFile, reader;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            file = getFile();\n\n            if (file) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 3:\n            _context3.next = 5;\n            return window.showLoading(function () {\n              return res.msg === true ? window.showToast('导入成功') : window.showModal({\n                view: React.createElement(\"h2\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 11\n                  },\n                  __self: this\n                }, \"\\u5BFC\\u5165\\u5931\\u8D25:\", res.msg, \"!\")\n              });\n            });\n\n          case 5:\n            parseFromFile =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(e) {\n                var sheets, students, stu_ids, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, student, id;\n\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        sheets = XLSX.read(new Uint8Array(e.target.result), {\n                          type: 'array'\n                        }).Sheets;\n                        students = XLSX.utils.sheet_to_json(sheets['Sheet1']);\n\n                        if (students[0]) {\n                          _context.next = 5;\n                          break;\n                        }\n\n                        throw '格式不正确';\n\n                      case 5:\n                        stu_ids = store.infoList.stu_table.reduce(function (acc, val) {\n                          return acc[val[0]] = val[1];\n                        }, {});\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _iteratorError = undefined;\n                        _context.prev = 9;\n\n                        for (_iterator = students[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                          student = _step.value;\n                          id = student['学号'];\n\n                          if (!stu_ids[id]) {\n                            store.infoList.stu_table.push([id, student['姓名']]);\n                            stu_ids[id] = student['姓名'];\n                          }\n                        }\n\n                        _context.next = 17;\n                        break;\n\n                      case 13:\n                        _context.prev = 13;\n                        _context.t0 = _context[\"catch\"](9);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t0;\n\n                      case 17:\n                        _context.prev = 17;\n                        _context.prev = 18;\n\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                          _iterator.return();\n                        }\n\n                      case 20:\n                        _context.prev = 20;\n\n                        if (!_didIteratorError) {\n                          _context.next = 23;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 23:\n                        return _context.finish(20);\n\n                      case 24:\n                        return _context.finish(17);\n\n                      case 25:\n                        store.infoList.stu_ids = stu_ids;\n                        window.hideLoading();\n                        return _context.abrupt(\"return\", {\n                          msg: true\n                        });\n\n                      case 30:\n                        _context.prev = 30;\n                        _context.t1 = _context[\"catch\"](0);\n                        window.hideLoading();\n                        return _context.abrupt(\"return\", {\n                          msg: _context.t1\n                        });\n\n                      case 34:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 30], [9, 13, 17, 25], [18,, 20, 24]]);\n              }));\n\n              return function parseFromFile(_x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            reader = new FileReader();\n\n            reader.onload =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(e) {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return parseFromFile(e);\n\n                      case 2:\n                        return _context2.abrupt(\"return\", res = _context2.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            reader.readAsArrayBuffer(file);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\excel\\loadinStudent.js"],"names":["React","XLSX","store","getFile","file","window","showLoading","res","msg","showToast","showModal","view","parseFromFile","e","sheets","read","Uint8Array","target","result","type","Sheets","students","utils","sheet_to_json","stu_ids","infoList","stu_table","reduce","acc","val","student","id","push","hideLoading","reader","FileReader","onload","readAsArrayBuffer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport XLSX from 'xlsx'\r\n\r\nexport default async (store, getFile) => {\r\n  let file = getFile()\r\n  if (!file) return\r\n  let res\r\n  await window.showLoading(() =>\r\n    res.msg === true\r\n      ? window.showToast('导入成功')\r\n      : window.showModal({ view: <h2>导入失败:{res.msg}!</h2> })\r\n  )\r\n  const parseFromFile = async e => {\r\n    try {\r\n        let sheets = XLSX.read(new Uint8Array(e.target.result), { type: 'array' }).Sheets\r\n        let students = XLSX.utils.sheet_to_json(sheets['Sheet1'])\r\n        if (!students[0]) throw '格式不正确'\r\n        let stu_ids = store.infoList.stu_table.reduce((acc, val) => acc[val[0]] = val[1] , {})\r\n        for (let student of students) {\r\n            let id = student['学号']\r\n            if (!stu_ids[id]) {\r\n                store.infoList.stu_table.push([id, student['姓名']])\r\n                stu_ids[id] = student['姓名']\r\n            }\r\n        }\r\n        store.infoList.stu_ids = stu_ids\r\n        window.hideLoading()\r\n        return { msg: true }\r\n    } catch (msg) {\r\n        window.hideLoading()\r\n        return { msg }\r\n    }\r\n  }\r\n\r\n  let reader = new FileReader()\r\n  reader.onload = async e => res = await parseFromFile(e)\r\n  reader.readAsArrayBuffer(file)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}