{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\api\\\\expaper\\\\config.js\";\nimport React from 'react';\nimport { get } from '../../utils/request';\nimport { Paper } from '../../config/ClassDefine';\nimport CM from '../../components/PaperConfig/index';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(store, paper_id) {\n    var res, paper;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return window.showLoading(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", res && window.showView(React.createElement(CM, {\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 9\n                        },\n                        __self: this\n                      })));\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            })));\n\n          case 2:\n            _context2.next = 4;\n            return get('all_questions', {\n              paper_id: paper_id\n            });\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return Paper.parseFromDB(res, paper_id, store.infoList.all_paper);\n\n          case 7:\n            paper = _context2.sent;\n            store.infoList.paper = paper;\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\expaper\\config.js"],"names":["React","get","Paper","CM","store","paper_id","window","showLoading","res","showView","parseFromDB","infoList","all_paper","paper"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAAoB,qBAApB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,EAAP,MAAe,oCAAf;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,kBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPC,MAAM,CAACC,WAAP;AAAA;AAAA;AAAA;AAAA,qCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAYC,GAAG,IAAIF,MAAM,CAACG,QAAP,CAAgB,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhB,CAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GAFO;;AAAA;AAAA;AAAA,mBAGDR,GAAG,CAAC,eAAD,EAAkB;AAAEI,cAAAA,QAAQ,EAARA;AAAF,aAAlB,CAHF;;AAAA;AAGbG,YAAAA,GAHa;AAAA;AAAA,mBAIKN,KAAK,CAACQ,WAAN,CAAkBF,GAAlB,EAAuBH,QAAvB,EAAiCD,KAAK,CAACO,QAAN,CAAeC,SAAhD,CAJL;;AAAA;AAITC,YAAAA,KAJS;AAKbT,YAAAA,KAAK,CAACO,QAAN,CAAeE,KAAf,GAAuBA,KAAvB;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react'\r\n\r\nimport { get } from '../../utils/request'\r\nimport { Paper } from '../../config/ClassDefine'\r\nimport CM from '../../components/PaperConfig/index'\r\n\r\nexport default async (store, paper_id) => {\r\n  let res\r\n  await window.showLoading(async () => res && window.showView(<CM />))\r\n  res = await get('all_questions', { paper_id })\r\n  let paper = await Paper.parseFromDB(res, paper_id, store.infoList.all_paper)\r\n  store.infoList.paper = paper\r\n}\r\n"]},"metadata":{},"sourceType":"module"}