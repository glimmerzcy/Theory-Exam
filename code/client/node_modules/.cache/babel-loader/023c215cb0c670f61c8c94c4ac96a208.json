{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\api\\\\infoList\\\\getInfo.js\";\nimport { get } from '../../utils/request';\nimport React from 'react';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store) {\n    var _ref2, data, notice, tests, ranks;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return get('api/main/page/v1');\n\n          case 2:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            notice = data.notice, tests = data.tests, ranks = data.ranks;\n            store.infoList.notice = notice.map(function (item, i) {\n              return _objectSpread({\n                info: item.title,\n                time: item.published_date,\n                detail: item.content,\n                url: \"/notice?id=\".concat(i)\n              }, item);\n            });\n            store.infoList.exam = tests.map(function (item, i) {\n              return _objectSpread({\n                info: React.createElement(\"span\", {\n                  onClick: function onClick() {\n                    return window.showToast('请在下方TABLE中操作');\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 18\n                  },\n                  __self: this\n                }, item.name),\n                time: item.publish_date\n              }, item);\n            });\n            ranks.rankByTime = ranks.rankByTime.map(function (v) {\n              return [v.stu_id, v.real_name, v.score];\n            });\n            ranks.rankByScore = ranks.rankByScore.map(function (v) {\n              return [v.stu_id, v.real_name, v.score];\n            });\n            store.infoList.stu_score_list = ranks;\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\infoList\\getInfo.js"],"names":["get","React","store","data","notice","tests","ranks","infoList","map","item","i","info","title","time","published_date","detail","content","url","exam","window","showToast","name","publish_date","rankByTime","v","stu_id","real_name","score","rankByScore","stu_score_list"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSF,GAAG,CAAC,kBAAD,CADZ;;AAAA;AAAA;AACPG,YAAAA,IADO,SACPA,IADO;AAEPC,YAAAA,MAFO,GAEkBD,IAFlB,CAEPC,MAFO,EAECC,KAFD,GAEkBF,IAFlB,CAECE,KAFD,EAEQC,KAFR,GAEkBH,IAFlB,CAEQG,KAFR;AAGbJ,YAAAA,KAAK,CAACK,QAAN,CAAeH,MAAf,GAAwBA,MAAM,CAACI,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC9C;AACEC,gBAAAA,IAAI,EAAEF,IAAI,CAACG,KADb;AAEEC,gBAAAA,IAAI,EAAEJ,IAAI,CAACK,cAFb;AAGEC,gBAAAA,MAAM,EAAEN,IAAI,CAACO,OAHf;AAIEC,gBAAAA,GAAG,uBAAgBP,CAAhB;AAJL,iBAKKD,IALL;AAOD,aARuB,CAAxB;AAUAP,YAAAA,KAAK,CAACK,QAAN,CAAeW,IAAf,GAAsBb,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3C;AACEC,gBAAAA,IAAI,EAAE;AAAM,kBAAA,OAAO,EAAE;AAAA,2BAAMQ,MAAM,CAACC,SAAP,CAAiB,cAAjB,CAAN;AAAA,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwDX,IAAI,CAACY,IAA7D,CADR;AAEER,gBAAAA,IAAI,EAAEJ,IAAI,CAACa;AAFb,iBAGKb,IAHL;AAKD,aANqB,CAAtB;AAQAH,YAAAA,KAAK,CAACiB,UAAN,GAAmBjB,KAAK,CAACiB,UAAN,CAAiBf,GAAjB,CAAqB,UAAAgB,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACC,MAAH,EAAWD,CAAC,CAACE,SAAb,EAAwBF,CAAC,CAACG,KAA1B,CAAJ;AAAA,aAAtB,CAAnB;AACArB,YAAAA,KAAK,CAACsB,WAAN,GAAoBtB,KAAK,CAACsB,WAAN,CAAkBpB,GAAlB,CAAsB,UAAAgB,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACC,MAAH,EAAWD,CAAC,CAACE,SAAb,EAAwBF,CAAC,CAACG,KAA1B,CAAJ;AAAA,aAAvB,CAApB;AACAzB,YAAAA,KAAK,CAACK,QAAN,CAAesB,cAAf,GAAgCvB,KAAhC;;AAvBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { get } from '../../utils/request'\r\nimport React from 'react'\r\nexport default async store => {\r\n  let { data } = (await get('api/main/page/v1'))\r\n  let { notice, tests, ranks } = data;\r\n  store.infoList.notice = notice.map((item, i) => {\r\n    return {\r\n      info: item.title,\r\n      time: item.published_date,\r\n      detail: item.content,\r\n      url: `/notice?id=${i}`,\r\n      ...item\r\n    }\r\n  })\r\n\r\n  store.infoList.exam = tests.map((item, i) => {\r\n    return {\r\n      info: <span onClick={() => window.showToast('请在下方TABLE中操作')}>{item.name}</span>,\r\n      time: item.publish_date,\r\n      ...item\r\n    }\r\n  })\r\n\r\n  ranks.rankByTime = ranks.rankByTime.map(v => [v.stu_id, v.real_name, v.score])\r\n  ranks.rankByScore = ranks.rankByScore.map(v => [v.stu_id, v.real_name, v.score])\r\n  store.infoList.stu_score_list = ranks\r\n}\r\n"]},"metadata":{},"sourceType":"module"}