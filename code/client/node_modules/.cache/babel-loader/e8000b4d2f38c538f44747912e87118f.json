{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { post } from '../../utils/request';\nimport Route from '../../config/RouteConfig';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store) {\n    var postData, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(store.infoList.paper.head.aim);\n\n            if (store.infoList.paper.head.aim == 0) {\n              postData = {\n                paper_id: store.infoList.paper.head.id\n              };\n            } else if (store.infoList.paper.head.aim == 1) {\n              postData = {\n                paper_id: store.infoList.paper.head.id,\n                college_codes: store.infoList.college_codes.map(function (ele) {\n                  return ele.id;\n                })\n              };\n            } else {\n              postData = {\n                paper_id: store.infoList.paper.head.id,\n                stu_ids: store.infoList.stu_table.map(function (stu) {\n                  return stu[0];\n                })\n              };\n            }\n\n            _context.next = 4;\n            return post('api/college/paper/release/v1', postData);\n\n          case 4:\n            res = _context.sent;\n\n            if (!(res.status === 'succeed')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return window.showToast('发布成功');\n\n          case 8:\n            window.navigateTo(Route.ExPaper.route);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\expaper\\publish.js"],"names":["post","Route","store","console","log","infoList","paper","head","aim","postData","paper_id","id","college_codes","map","ele","stu_ids","stu_table","stu","res","status","window","showToast","navigateTo","ExPaper","route"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,qBAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,GAAtC;;AACA,gBAAIN,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,GAA1B,IAAiC,CAArC,EAAwC;AACpCC,cAAAA,QAAQ,GAAG;AACPC,gBAAAA,QAAQ,EAAER,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BI;AAD7B,eAAX;AAGH,aAJD,MAIO,IAAIT,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BC,GAA1B,IAAiC,CAArC,EAAwC;AAC3CC,cAAAA,QAAQ,GAAG;AACPC,gBAAAA,QAAQ,EAAER,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BI,EAD7B;AAEPC,gBAAAA,aAAa,EAAEV,KAAK,CAACG,QAAN,CAAeO,aAAf,CAA6BC,GAA7B,CAAiC,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACH,EAAR;AAAA,iBAApC;AAFR,eAAX;AAIH,aALM,MAKA;AACHF,cAAAA,QAAQ,GAAG;AACPC,gBAAAA,QAAQ,EAAER,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAArB,CAA0BI,EAD7B;AAEPI,gBAAAA,OAAO,EAAEb,KAAK,CAACG,QAAN,CAAeW,SAAf,CAAyBH,GAAzB,CAA6B,UAAAI,GAAG;AAAA,yBAAIA,GAAG,CAAC,CAAD,CAAP;AAAA,iBAAhC;AAFF,eAAX;AAIH;;AAjBU;AAAA,mBAkBKjB,IAAI,CAAC,8BAAD,EAAiCS,QAAjC,CAlBT;;AAAA;AAkBPS,YAAAA,GAlBO;;AAAA,kBAmBPA,GAAG,CAACC,MAAJ,KAAe,SAnBR;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBDC,MAAM,CAACC,SAAP,CAAiB,MAAjB,CApBC;;AAAA;AAqBPD,YAAAA,MAAM,CAACE,UAAP,CAAkBrB,KAAK,CAACsB,OAAN,CAAcC,KAAhC;;AArBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { post } from '../../utils/request'\r\nimport Route from '../../config/RouteConfig'\r\n\r\nexport default async (store) => {\r\n    let postData\r\n    console.log(store.infoList.paper.head.aim)\r\n    if (store.infoList.paper.head.aim == 0) {\r\n        postData = {\r\n            paper_id: store.infoList.paper.head.id\r\n        }\r\n    } else if (store.infoList.paper.head.aim == 1) {\r\n        postData = {\r\n            paper_id: store.infoList.paper.head.id,\r\n            college_codes: store.infoList.college_codes.map(ele => ele.id),\r\n        }\r\n    } else {\r\n        postData = {\r\n            paper_id: store.infoList.paper.head.id,\r\n            stu_ids: store.infoList.stu_table.map(stu => stu[0])\r\n        }\r\n    }\r\n    let res = await post('api/college/paper/release/v1', postData)\r\n    if (res.status === 'succeed') {\r\n        await window.showToast('发布成功')\r\n        window.navigateTo(Route.ExPaper.route)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}