{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _initializerDefineProperty from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _class3, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _class5, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _class7, _descriptor11, _descriptor12, _class9, _descriptor13, _descriptor14, _class10, _temp, _class11, _descriptor15, _descriptor16, _descriptor17;\n\nimport { observable } from 'mobx';\nimport XLSX from 'xlsx';\nimport Time from '../utils/Time';\nvar af = 'ABCDEF';\nwindow.XLSX = XLSX;\nexport var Option = (_class = function Option() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, Option);\n\n  _initializerDefineProperty(this, \"text\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"value\", _descriptor2, this);\n\n  this.text = text;\n  this.value = value;\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"text\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"value\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n})), _class);\nexport var SubQuestion = (_class3 =\n/*#__PURE__*/\nfunction () {\n  function SubQuestion() {\n    _classCallCheck(this, SubQuestion);\n\n    _initializerDefineProperty(this, \"id\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"is_exist\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"item\", _descriptor6, this);\n  }\n\n  _createClass(SubQuestion, [{\n    key: \"setTitle\",\n    value: function setTitle(e) {\n      if (this.title == e.target.value) return;\n      this.title = e.target.value;\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(e) {\n      if (this.item == e.target.value) return;\n      this.item = e.target.value;\n    }\n  }], [{\n    key: \"EQ\",\n    value: function EQ(id) {\n      var Q = new SubQuestion();\n      Q.id = id;\n      Q.is_exist = 0;\n      console.log(Q.is_exist);\n      return Q;\n    }\n  }, {\n    key: \"parseFromDBQ\",\n    value: function parseFromDBQ(que) {\n      var question = new SubQuestion();\n      question.title = que.topic;\n      question.id = que.id;\n      question.is_exist = que.is_exist;\n      question.item = que.answer;\n      return question;\n    }\n  }, {\n    key: \"parseFromRow\",\n    value: function parseFromRow(que) {\n      var question = new SubQuestion();\n      question.title = que['题干'];\n      question.is_exist = 1;\n      question.item = que['答案'];\n      return question;\n    }\n  }]);\n\n  return SubQuestion;\n}(), (_descriptor3 = _applyDecoratedDescriptor(_class3.prototype, \"id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class3.prototype, \"is_exist\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class3.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class3.prototype, \"item\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n})), _class3);\nexport var Question = (_class5 =\n/*#__PURE__*/\nfunction () {\n  function Question() {\n    var _this = this;\n\n    _classCallCheck(this, Question);\n\n    _initializerDefineProperty(this, \"id\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"is_exist\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"item\", _descriptor10, this);\n\n    this.option = function (index) {\n      return _this.item[index];\n    };\n\n    this.options = function () {\n      return _this.item;\n    };\n\n    this.setOption = function (index, value) {\n      return _this.item[index] = value;\n    };\n\n    this.remove = function (index) {\n      return _this.item.splice(index, 1);\n    };\n  }\n\n  _createClass(Question, [{\n    key: \"setTitle\",\n    value: function setTitle(e) {\n      if (this.title == e.target.value) return;\n      this.title = e.target.value;\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Option();\n      this.item.push(option);\n    }\n  }, {\n    key: \"getOptTextObj\",\n    value: function getOptTextObj() {\n      var obj = {};\n      this.options().forEach(function (opt, k) {\n        return obj[\"obj\".concat(af[k])] = opt.text;\n      });\n\n      if (this.options.length < af.length) {\n        for (var i = this.option.length; i < af.length; ++i) {\n          obj[\"obj\".concat(af[i])] = '';\n        }\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"getOptTextArr\",\n    value: function getOptTextArr(ori) {\n      var arr = new Array(ori.length).fill('');\n      this.item.forEach(function (opt, i) {\n        return arr[i] = opt.text;\n      });\n      return arr;\n    }\n  }, {\n    key: \"getKeyStr\",\n    value: function getKeyStr() {\n      var arr = [];\n      this.item.forEach(function (opt, i) {\n        return opt.value && arr.push(af[i]);\n      });\n      arr = arr.join('');\n      if (arr === '' && this.is_exist) throw '不允许没有正确答案';\n      return arr;\n    }\n  }], [{\n    key: \"EQ\",\n    value: function EQ(id) {\n      var Q = new Question();\n      Q.id = id;\n      Q.is_exist = 0;\n      console.log(Q.is_exist);\n      return Q;\n    }\n  }, {\n    key: \"parseFromRow\",\n    value: function parseFromRow(que, opts) {\n      var question = new Question();\n      question.title = que['题干'];\n      question.is_exist = 1;\n      opts.split('').forEach(function (opt, k) {\n        return que[opt] && question.setOption(k, new Option(que[opt], que['答案'].indexOf(opt) >= 0));\n      });\n      return question;\n    }\n  }, {\n    key: \"parseFromDBQ\",\n    value: function parseFromDBQ(que) {\n      var question = new Question();\n      question.title = que.topic;\n      question.id = que.id;\n      question.is_exist = que.is_exist;\n      var ans = new Array(af.length).fill(0);\n      var answer = que.answer.split('');\n      var A = 'A'.charCodeAt();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = answer[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var a = _step.value;\n          ans[a.charCodeAt() - A]++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      af.split('').forEach(function (opt, k) {\n        que[\"obj\".concat(opt)] && question.setOption(k, new Option(que[\"obj\".concat(opt)], ans[opt.charCodeAt() - A] === 1));\n      });\n      return question;\n    }\n  }]);\n\n  return Question;\n}(), (_descriptor7 = _applyDecoratedDescriptor(_class5.prototype, \"id\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return undefined;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class5.prototype, \"is_exist\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return 1;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class5.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class5.prototype, \"item\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [new Option(''), new Option(''), new Option('', true), new Option('')];\n  }\n})), _class5);\nexport var Section = (_class7 = function Section() {\n  var _this2 = this;\n\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'sc';\n  var subtitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '单选题';\n\n  _classCallCheck(this, Section);\n\n  _initializerDefineProperty(this, \"config\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"quiz\", _descriptor12, this);\n\n  this.quesion = function (index) {\n    return _this2.quiz[index];\n  };\n\n  this.quesions = function () {\n    return _this2.quiz;\n  };\n\n  this.add = function () {\n    var quesion = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this2.config.type === 'sub' ? new SubQuestion() : new Question();\n    return _this2.quiz.push(quesion);\n  };\n\n  this.calculateScore = function () {\n    var quiz = _this2.quiz,\n        config = _this2.config,\n        point = config.point,\n        num = config.num,\n        score = quiz.reduce(function (acc, vec) {\n      return acc + vec.is_exist * point;\n    }, 0),\n        sup = point * num;\n    return Math.min(score, sup);\n  };\n\n  this.remove = function (id) {\n    console.log('remove', id);\n    console.log(_this2.quiz.filter(function (q) {\n      return q.is_exist;\n    }));\n\n    var target = _this2.quiz.filter(function (q) {\n      return q.is_exist;\n    })[id];\n\n    console.log('target', target);\n    target.is_exist = 0;\n    console.log(_this2.quiz.filter(function (q) {\n      return q.is_exist;\n    }));\n  };\n\n  this.config.type = type;\n  this.config.subtitle = subtitle;\n  this.quiz = this.config.type === 'sub' ? [new SubQuestion()] : [new Question()];\n\n  if (type === 'sc') {\n    this.config.num = 40;\n    this.config.point = 1;\n  } else if (type === 'mc') {\n    this.config.num = 30;\n    this.config.point = 2;\n  } else {\n    this.config.num = 2;\n    this.config.point = 10;\n  }\n}, (_descriptor11 = _applyDecoratedDescriptor(_class7.prototype, \"config\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      type: '',\n      subtitle: '单选题',\n      point: 1,\n      num: 1\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class7.prototype, \"quiz\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class7);\nvar sheet_names = ['单选', '多选'],\n    opts = ['ABCD', af],\n    type_names = 'sm';\n\nvar sheet_head = function sheet_head(i) {\n  return ['题干'].concat(_toConsumableArray(opts[i].split('')), ['答案']);\n}; // subjective\n\n\nvar subjective_sheet_names = ['主观'];\n\nvar subjective_sheet_head = function subjective_sheet_head(i) {\n  return ['题干', '答案'];\n};\n\nexport var Paper = (_class9 = (_temp = _class10 =\n/*#__PURE__*/\nfunction () {\n  function Paper() {\n    var _this3 = this;\n\n    _classCallCheck(this, Paper);\n\n    _initializerDefineProperty(this, \"head\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"body\", _descriptor14, this);\n\n    this.section = function (index) {\n      return _this3.body[index];\n    };\n\n    this.calculateScore = function () {\n      return _this3.body.reduce(function (acc, vec) {\n        return acc + vec.calculateScore();\n      }, 0);\n    };\n\n    this.calculateNum = function () {\n      return _this3.body.reduce(function (acc, vec) {\n        return acc + vec.config.num * 1;\n      }, 0);\n    };\n\n    this.canToExam = function () {\n      return _this3.body.reduce(function (acc, sec) {\n        return acc && sec.quesions().length >= sec.config.num;\n      }, true);\n    };\n\n    this.resetSoftly = function (i) {\n      return _this3.body[i].quiz = [];\n    };\n\n    this.renew = function () {\n      _this3.head.id = undefined;\n\n      _this3.body.forEach(function (sec) {\n        return sec.quiz.forEach(function (que) {\n          return que.id = undefined;\n        });\n      });\n    };\n\n    this.parseFromFile =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var paper, i, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, que, _i, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _que, sheets, _i2, ques, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _que2, _i3, _ques, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, _que3;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                paper = new Paper();\n                i = 0;\n\n              case 3:\n                if (!(i < sheet_names.length)) {\n                  _context.next = 27;\n                  break;\n                }\n\n                paper.resetSoftly(i);\n                _iteratorNormalCompletion2 = true;\n                _didIteratorError2 = false;\n                _iteratorError2 = undefined;\n                _context.prev = 8;\n\n                for (_iterator2 = _this3.section(i).quiz[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  que = _step2.value;\n                  que.id && paper.section(i).add(Question.EQ(que.id));\n                }\n\n                _context.next = 16;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](8);\n                _didIteratorError2 = true;\n                _iteratorError2 = _context.t0;\n\n              case 16:\n                _context.prev = 16;\n                _context.prev = 17;\n\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n\n              case 19:\n                _context.prev = 19;\n\n                if (!_didIteratorError2) {\n                  _context.next = 22;\n                  break;\n                }\n\n                throw _iteratorError2;\n\n              case 22:\n                return _context.finish(19);\n\n              case 23:\n                return _context.finish(16);\n\n              case 24:\n                i++;\n                _context.next = 3;\n                break;\n\n              case 27:\n                _i = 0;\n\n              case 28:\n                if (!(_i < subjective_sheet_names.length)) {\n                  _context.next = 52;\n                  break;\n                }\n\n                paper.resetSoftly(_i + sheet_names.length);\n                _iteratorNormalCompletion3 = true;\n                _didIteratorError3 = false;\n                _iteratorError3 = undefined;\n                _context.prev = 33;\n\n                for (_iterator3 = _this3.section(_i + sheet_names.length).quiz[Symbol.iterator](); !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  _que = _step3.value;\n                  _que.id && paper.section(_i + sheet_names.length).add(SubQuestion.EQ(_que.id));\n                }\n\n                _context.next = 41;\n                break;\n\n              case 37:\n                _context.prev = 37;\n                _context.t1 = _context[\"catch\"](33);\n                _didIteratorError3 = true;\n                _iteratorError3 = _context.t1;\n\n              case 41:\n                _context.prev = 41;\n                _context.prev = 42;\n\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n\n              case 44:\n                _context.prev = 44;\n\n                if (!_didIteratorError3) {\n                  _context.next = 47;\n                  break;\n                }\n\n                throw _iteratorError3;\n\n              case 47:\n                return _context.finish(44);\n\n              case 48:\n                return _context.finish(41);\n\n              case 49:\n                _i++;\n                _context.next = 28;\n                break;\n\n              case 52:\n                sheets = XLSX.read(new Uint8Array(e.target.result), {\n                  type: 'array'\n                }).Sheets;\n                _i2 = 0;\n\n              case 54:\n                if (!sheet_names[_i2]) {\n                  _context.next = 88;\n                  break;\n                }\n\n                ques = XLSX.utils.sheet_to_json(sheets[sheet_names[_i2]]);\n\n                if (ques[0]) {\n                  _context.next = 58;\n                  break;\n                }\n\n                throw '格式不正确';\n\n              case 58:\n                _iteratorNormalCompletion4 = true;\n                _didIteratorError4 = false;\n                _iteratorError4 = undefined;\n                _context.prev = 61;\n                _iterator4 = ques[Symbol.iterator]();\n\n              case 63:\n                if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                  _context.next = 71;\n                  break;\n                }\n\n                _que2 = _step4.value;\n                paper.section(_i2).add(Question.parseFromRow(_que2, opts[_i2]));\n                _context.next = 68;\n                return Time.sleep(1);\n\n              case 68:\n                _iteratorNormalCompletion4 = true;\n                _context.next = 63;\n                break;\n\n              case 71:\n                _context.next = 77;\n                break;\n\n              case 73:\n                _context.prev = 73;\n                _context.t2 = _context[\"catch\"](61);\n                _didIteratorError4 = true;\n                _iteratorError4 = _context.t2;\n\n              case 77:\n                _context.prev = 77;\n                _context.prev = 78;\n\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n\n              case 80:\n                _context.prev = 80;\n\n                if (!_didIteratorError4) {\n                  _context.next = 83;\n                  break;\n                }\n\n                throw _iteratorError4;\n\n              case 83:\n                return _context.finish(80);\n\n              case 84:\n                return _context.finish(77);\n\n              case 85:\n                _i2++;\n                _context.next = 54;\n                break;\n\n              case 88:\n                _i3 = 0;\n\n              case 89:\n                if (!subjective_sheet_names[_i3]) {\n                  _context.next = 123;\n                  break;\n                }\n\n                _ques = XLSX.utils.sheet_to_json(sheets[subjective_sheet_names[_i3]]);\n\n                if (!(!_ques || !_ques[0])) {\n                  _context.next = 93;\n                  break;\n                }\n\n                return _context.abrupt(\"break\", 123);\n\n              case 93:\n                _iteratorNormalCompletion5 = true;\n                _didIteratorError5 = false;\n                _iteratorError5 = undefined;\n                _context.prev = 96;\n                _iterator5 = _ques[Symbol.iterator]();\n\n              case 98:\n                if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n                  _context.next = 106;\n                  break;\n                }\n\n                _que3 = _step5.value;\n                paper.section(_i3 + sheet_names.length).add(SubQuestion.parseFromRow(_que3));\n                _context.next = 103;\n                return Time.sleep(1);\n\n              case 103:\n                _iteratorNormalCompletion5 = true;\n                _context.next = 98;\n                break;\n\n              case 106:\n                _context.next = 112;\n                break;\n\n              case 108:\n                _context.prev = 108;\n                _context.t3 = _context[\"catch\"](96);\n                _didIteratorError5 = true;\n                _iteratorError5 = _context.t3;\n\n              case 112:\n                _context.prev = 112;\n                _context.prev = 113;\n\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n\n              case 115:\n                _context.prev = 115;\n\n                if (!_didIteratorError5) {\n                  _context.next = 118;\n                  break;\n                }\n\n                throw _iteratorError5;\n\n              case 118:\n                return _context.finish(115);\n\n              case 119:\n                return _context.finish(112);\n\n              case 120:\n                _i3++;\n                _context.next = 89;\n                break;\n\n              case 123:\n                _this3.body = paper.body;\n                window.hideLoading();\n                return _context.abrupt(\"return\", {\n                  msg: true\n                });\n\n              case 128:\n                _context.prev = 128;\n                _context.t4 = _context[\"catch\"](0);\n                window.hideLoading();\n                return _context.abrupt(\"return\", {\n                  msg: _context.t4\n                });\n\n              case 132:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 128], [8, 12, 16, 24], [17,, 19, 23], [33, 37, 41, 49], [42,, 44, 48], [61, 73, 77, 85], [78,, 80, 84], [96, 108, 112, 120], [113,, 115, 119]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.getExamHead = function () {\n      return {\n        head: {\n          title: _this3.head.title,\n          start_date: Date.now(),\n          duration: _this3.head['time-limit'],\n          num: _this3.calculateNum()\n        }\n      };\n    };\n  }\n\n  _createClass(Paper, [{\n    key: \"parseToExcel\",\n    value: function parseToExcel() {\n      var _this4 = this;\n\n      var wb = XLSX.utils.book_new();\n      sheet_names.forEach(function (name, i) {\n        return XLSX.utils.book_append_sheet(wb, XLSX.utils.aoa_to_sheet([sheet_head(i)].concat(_toConsumableArray(_this4.body[i].quesions().filter(function (q) {\n          return q.is_exist;\n        }).map(function (que) {\n          return [que.title].concat(_toConsumableArray(que.getOptTextArr(opts[i])), [que.getKeyStr()]);\n        })))), name);\n      });\n      subjective_sheet_names.forEach(function (name, i) {\n        return XLSX.utils.book_append_sheet(wb, XLSX.utils.aoa_to_sheet([subjective_sheet_head(i)].concat(_toConsumableArray(_this4.body[i + sheet_names.length].quesions().filter(function (q) {\n          return q.is_exist;\n        }).map(function (que) {\n          return [que.title, que.item];\n        })))), name);\n      });\n      return wb;\n    }\n  }, {\n    key: \"getAUpLoad\",\n    value: function getAUpLoad() {\n      if (this.calculateScore() === 0) throw '不允许试卷为空';\n      var len = this.body.length;\n\n      for (var i = 0; i < len - 1; ++i) {\n        var sec = this.body[i];\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = sec.quesions()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var quiz = _step6.value;\n            if (!quiz.is_exist) continue;\n            if (quiz.title === '') throw '不允许题目为空';else if (sec.config.type != 'sub') {\n              var _iteratorNormalCompletion7 = true;\n              var _didIteratorError7 = false;\n              var _iteratorError7 = undefined;\n\n              try {\n                for (var _iterator7 = quiz.options()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                  var opt = _step7.value;\n                  if (opt.text === '') throw '不允许选项为空';\n                }\n              } catch (err) {\n                _didIteratorError7 = true;\n                _iteratorError7 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                    _iterator7.return();\n                  }\n                } finally {\n                  if (_didIteratorError7) {\n                    throw _iteratorError7;\n                  }\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n\n      var obj = {};\n      obj.head = {\n        id: this.head.id,\n        name: this.head.title,\n        test_time: this.head[\"max-times\"],\n        duration: this.head[\"time-limit\"],\n        tip: this.head[\"tip\"],\n        aim: this.head[\"aim\"],\n        started_at: Time.datetime_to_stamp(this.head[\"date-from\"]),\n        ended_at: Time.datetime_to_stamp(this.head[\"date-to\"]),\n        related: 0\n      };\n      obj.body = [{\n        name: 'tizu1',\n        credit_per_question: 2,\n        draw_quantity: this.body[0].quesions().length,\n        is_subjective: 0,\n        questions: []\n      }, {\n        name: 'tizu2',\n        credit_per_question: 3,\n        draw_quantity: this.body[1].quesions().length,\n        is_subjective: 0,\n        questions: []\n      }, {\n        name: 'tizu3',\n        credit_per_question: 5,\n        draw_quantity: this.body[2].quesions().length,\n        is_subjective: 1,\n        questions: []\n      }];\n      this.body.forEach(function (sec, index) {\n        if (sec.config.type !== 'sub') {\n          sec.quesions().map(function (que) {\n            return obj.body[index].questions.push(_objectSpread({\n              topic: que.title\n            }, que.getOptTextObj(), {\n              answer: que.getKeyStr()\n            }));\n          });\n        } else {\n          sec.quesions().map(function (que) {\n            return obj.body[index].questions.push({\n              topic: que.title,\n              answer: que.item\n            });\n          });\n        }\n      });\n      return obj;\n    }\n  }, {\n    key: \"getAExam\",\n    value: function getAExam() {\n      var exam = this.getExamHead();\n      exam.body = this.body.reduce(function (acc, sec) {\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(sec.quesions().shuffle().slice(-sec.config.num).map(function (que, k) {\n          return _objectSpread({\n            id: \"temp_\".concat(sec.config.type, \"_\").concat(k),\n            type: sec.config.type\n          }, que.getOptTextObj(), {\n            question: que.title\n          });\n        })));\n      }, []).shuffle();\n      return exam;\n    }\n  }]);\n\n  return Paper;\n}(), _class10.parseFromDB =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(res, id, papers) {\n    var target_paper, paper, data, len, i, ques, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, que, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, _que4;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            res = res.data;\n            target_paper = res.head;\n            paper = new Paper();\n            paper.head = {\n              id: id,\n              title: target_paper.name,\n              'time-limit': target_paper.duration,\n              'date-from': Time.stamp_to_datetime(target_paper.started_at),\n              'date-to': Time.stamp_to_datetime(target_paper.ended_at),\n              'max-times': target_paper.test_time,\n              'tip': target_paper.tip,\n              'related': target_paper.related,\n              'aim': target_paper.aim\n            };\n            data = res.body;\n            len = data.length;\n            i = 0;\n\n          case 7:\n            if (!(i < len)) {\n              _context2.next = 71;\n              break;\n            }\n\n            ques = data[i].questions;\n            _context2.next = 11;\n            return paper.resetSoftly(i);\n\n          case 11:\n            if (!(data[i].name !== 'tizu3')) {\n              _context2.next = 41;\n              break;\n            }\n\n            _iteratorNormalCompletion8 = true;\n            _didIteratorError8 = false;\n            _iteratorError8 = undefined;\n            _context2.prev = 15;\n            _iterator8 = ques[Symbol.iterator]();\n\n          case 17:\n            if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n              _context2.next = 25;\n              break;\n            }\n\n            que = _step8.value;\n            paper.section(i).add(Question.parseFromDBQ(que));\n            _context2.next = 22;\n            return Time.sleep(1);\n\n          case 22:\n            _iteratorNormalCompletion8 = true;\n            _context2.next = 17;\n            break;\n\n          case 25:\n            _context2.next = 31;\n            break;\n\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](15);\n            _didIteratorError8 = true;\n            _iteratorError8 = _context2.t0;\n\n          case 31:\n            _context2.prev = 31;\n            _context2.prev = 32;\n\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n\n          case 34:\n            _context2.prev = 34;\n\n            if (!_didIteratorError8) {\n              _context2.next = 37;\n              break;\n            }\n\n            throw _iteratorError8;\n\n          case 37:\n            return _context2.finish(34);\n\n          case 38:\n            return _context2.finish(31);\n\n          case 39:\n            _context2.next = 68;\n            break;\n\n          case 41:\n            _iteratorNormalCompletion9 = true;\n            _didIteratorError9 = false;\n            _iteratorError9 = undefined;\n            _context2.prev = 44;\n            _iterator9 = ques[Symbol.iterator]();\n\n          case 46:\n            if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n              _context2.next = 54;\n              break;\n            }\n\n            _que4 = _step9.value;\n            paper.section(i).add(SubQuestion.parseFromDBQ(_que4));\n            _context2.next = 51;\n            return Time.sleep(1);\n\n          case 51:\n            _iteratorNormalCompletion9 = true;\n            _context2.next = 46;\n            break;\n\n          case 54:\n            _context2.next = 60;\n            break;\n\n          case 56:\n            _context2.prev = 56;\n            _context2.t1 = _context2[\"catch\"](44);\n            _didIteratorError9 = true;\n            _iteratorError9 = _context2.t1;\n\n          case 60:\n            _context2.prev = 60;\n            _context2.prev = 61;\n\n            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n              _iterator9.return();\n            }\n\n          case 63:\n            _context2.prev = 63;\n\n            if (!_didIteratorError9) {\n              _context2.next = 66;\n              break;\n            }\n\n            throw _iteratorError9;\n\n          case 66:\n            return _context2.finish(63);\n\n          case 67:\n            return _context2.finish(60);\n\n          case 68:\n            i++;\n            _context2.next = 7;\n            break;\n\n          case 71:\n            return _context2.abrupt(\"return\", paper);\n\n          case 72:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[15, 27, 31, 39], [32,, 34, 38], [44, 56, 60, 68], [61,, 63, 67]]);\n  }));\n\n  return function (_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(), _temp), (_descriptor13 = _applyDecoratedDescriptor(_class9.prototype, \"head\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      title: '新未命名试卷',\n      'time-limit': 35,\n      'min-score': 60,\n      'max-times': 10,\n      'date-from': '1976-10-01T00:00',\n      'date-to': '2035-10-01T23:59',\n      'more-detail': '更多细节...',\n      'tip': '无',\n      'aim': 0\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class9.prototype, \"body\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [new Section('sc', '单选题'), new Section('mc', '多选题'), new Section('sub', '主观题')];\n  }\n})), _class9);\nexport var Exam = (_class11 =\n/*#__PURE__*/\nfunction () {\n  function Exam() {\n    _classCallCheck(this, Exam);\n\n    _initializerDefineProperty(this, \"head\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"body\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"subjective\", _descriptor17, this);\n  }\n\n  _createClass(Exam, [{\n    key: \"submit\",\n    value: function submit() {\n      var result = {\n        paper_id: this.head.paper_id,\n        record: [],\n        sub_record: []\n      };\n      console.log(this.body);\n      this.body.concat(this.subjective).forEach(function (subj) {\n        var block = {\n          tag_id: subj.tag_id,\n          answers: subj.question.reduce(function (acc, val) {\n            acc[val.id] = Array.isArray(val.stu_answer) ? val.stu_answer.join('') : val.stu_answer;\n            return acc;\n          }, {})\n        };\n\n        if (+subj.is_subjective) {\n          result.sub_record.push(block);\n        } else {\n          result.record.push(block);\n        } //   let { stu_answer, time_stamp, type, id } = que\n        //   type === 'mc' && (stu_answer = stu_answer.join(''))\n        //   result[`${type}q`][id] = stu_answer || ''\n        //   result[`${type}q_t`][id] = time_stamp || 0\n\n      });\n      return result;\n    }\n  }, {\n    key: \"cheat\",\n    value: function cheat() {\n      return {\n        paper_id: this.head.paper_id,\n        mcq: {},\n        scq: {}\n      };\n    }\n  }]);\n\n  return Exam;\n}(), (_descriptor15 = _applyDecoratedDescriptor(_class11.prototype, \"head\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      title: new String(),\n      start_date: new String(),\n      duration: new String(),\n      num: new Number()\n    };\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class11.prototype, \"body\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [{\n      question: []\n    }];\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class11.prototype, \"subjective\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [{\n      question: []\n    }];\n  }\n})), _class11);","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\config\\ClassDefine.js"],"names":["observable","XLSX","Time","af","window","Option","text","value","SubQuestion","e","title","target","item","id","Q","is_exist","console","log","que","question","topic","answer","undefined","Question","option","index","options","setOption","remove","splice","push","obj","forEach","opt","k","length","i","ori","arr","Array","fill","join","opts","split","indexOf","ans","A","charCodeAt","a","Section","type","subtitle","quesion","quiz","quesions","add","config","calculateScore","point","num","score","reduce","acc","vec","sup","Math","min","filter","q","sheet_names","type_names","sheet_head","subjective_sheet_names","subjective_sheet_head","Paper","section","body","calculateNum","canToExam","sec","resetSoftly","renew","head","parseFromFile","paper","EQ","sheets","read","Uint8Array","result","Sheets","ques","utils","sheet_to_json","parseFromRow","sleep","hideLoading","msg","getExamHead","start_date","Date","now","duration","wb","book_new","name","book_append_sheet","aoa_to_sheet","map","getOptTextArr","getKeyStr","len","test_time","tip","aim","started_at","datetime_to_stamp","ended_at","related","credit_per_question","draw_quantity","is_subjective","questions","getOptTextObj","exam","shuffle","slice","parseFromDB","res","papers","data","target_paper","stamp_to_datetime","parseFromDBQ","Exam","paper_id","record","sub_record","concat","subjective","subj","block","tag_id","answers","val","isArray","stu_answer","mcq","scq","String","Number"],"mappings":"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","sourcesContent":["import { observable } from 'mobx'\r\nimport XLSX from 'xlsx'\r\nimport Time from '../utils/Time'\r\n\r\nconst af = 'ABCDEF'\r\n\r\nwindow.XLSX = XLSX\r\n\r\nexport class Option {\r\n  constructor(text = '', value = false) {\r\n    this.text = text\r\n    this.value = value\r\n  }\r\n  @observable\r\n  text = ''\r\n  @observable\r\n  value = false\r\n}\r\n\r\nexport class SubQuestion {\r\n    @observable\r\n    id = undefined\r\n    @observable\r\n    is_exist = 1\r\n    @observable\r\n    title = ''\r\n\r\n    @observable\r\n    item = ''\r\n\r\n    static EQ(id) {\r\n      let Q = new SubQuestion()\r\n      Q.id = id\r\n      Q.is_exist = 0\r\n      console.log(Q.is_exist)\r\n      return Q\r\n    }\r\n    setTitle(e) {\r\n      if (this.title == e.target.value)\r\n        return\r\n      this.title = e.target.value\r\n    }\r\n\r\n    setItem(e) {\r\n        if (this.item == e.target.value)\r\n          return\r\n        this.item = e.target.value\r\n    }\r\n\r\n    static parseFromDBQ(que) {\r\n        let question = new SubQuestion()\r\n        question.title = que.topic\r\n        question.id = que.id\r\n        question.is_exist = que.is_exist\r\n        question.item = que.answer\r\n        return question\r\n    }\r\n\r\n    static parseFromRow(que) {\r\n        let question = new SubQuestion()\r\n        question.title = que['题干']\r\n        question.is_exist = 1\r\n        question.item = que['答案']\r\n        return question\r\n    }\r\n  }\r\n\r\n\r\nexport class Question {\r\n  @observable\r\n  id = undefined\r\n  @observable\r\n  is_exist = 1\r\n  @observable\r\n  title = ''\r\n  @observable\r\n  item = [\r\n    new Option(''),\r\n    new Option(''),\r\n    new Option('', true),\r\n    new Option(''),\r\n  ]\r\n  static EQ(id) {\r\n    let Q = new Question()\r\n    Q.id = id\r\n    Q.is_exist = 0\r\n    console.log(Q.is_exist)\r\n    return Q\r\n  }\r\n  setTitle(e) {\r\n    if (this.title == e.target.value)\r\n      return\r\n    this.title = e.target.value\r\n  }\r\n  option = index => this.item[index]\r\n  options = () => this.item\r\n  setOption = (index, value) => this.item[index] = value\r\n  add(option = new Option()) {\r\n    this.item.push(option)\r\n  }\r\n  remove = index => this.item.splice(index, 1)\r\n  getOptTextObj() {\r\n    let obj = {}\r\n    this.options().forEach((opt, k) => obj[`obj${af[k]}`] = opt.text)\r\n    if (this.options.length < af.length) {\r\n        for (let i = this.option.length; i < af.length; ++i) {\r\n            obj[`obj${af[i]}`] = ''\r\n        }\r\n    }\r\n    return obj\r\n  }\r\n  getOptTextArr(ori) {\r\n    let arr = new Array(ori.length).fill('')\r\n    this.item.forEach((opt, i) => arr[i] = opt.text)\r\n    return arr\r\n  }\r\n  getKeyStr() {\r\n    let arr = []\r\n    this.item.forEach((opt, i) => opt.value && arr.push(af[i]))\r\n    arr = arr.join('')\r\n    if (arr === '' && this.is_exist) throw '不允许没有正确答案'\r\n    return arr\r\n  }\r\n  static parseFromRow(que, opts) {\r\n    let question = new Question()\r\n    question.title = que['题干']\r\n    question.is_exist = 1\r\n    opts.split('').forEach((opt, k) => que[opt] && question.setOption(k, new Option(que[opt], que['答案'].indexOf(opt) >= 0)))\r\n    return question\r\n  }\r\n  static parseFromDBQ(que) {\r\n    let question = new Question()\r\n    question.title = que.topic\r\n    question.id = que.id\r\n    question.is_exist = que.is_exist\r\n    let ans = new Array(af.length).fill(0)\r\n    let answer = que.answer.split('')\r\n    let A = 'A'.charCodeAt()\r\n    for (let a of answer) {\r\n        ans[a.charCodeAt() - A]++;\r\n    }\r\n    af.split('').forEach((opt, k) => {\r\n        que[`obj${opt}`] && question.setOption(k, new Option(que[`obj${opt}`], ans[opt.charCodeAt() - A] === 1))\r\n    })\r\n    return question\r\n  }\r\n}\r\n\r\nexport class Section {\r\n  constructor(type = 'sc', subtitle = '单选题') {\r\n    this.config.type = type\r\n    this.config.subtitle = subtitle\r\n    this.quiz = this.config.type === 'sub' ? [new SubQuestion()] : [new Question()]\r\n    if (type === 'sc') {\r\n      this.config.num = 40\r\n      this.config.point = 1\r\n    } else if (type === 'mc') {\r\n      this.config.num = 30\r\n      this.config.point = 2\r\n    } else {\r\n        this.config.num = 2\r\n        this.config.point = 10\r\n    }\r\n  }\r\n  @observable\r\n  config = {\r\n    type: '',\r\n    subtitle: '单选题',\r\n    point: 1,\r\n    num: 1\r\n  }\r\n  @observable\r\n  quiz\r\n  quesion = index => this.quiz[index]\r\n  quesions = () => this.quiz\r\n  add = (quesion = this.config.type === 'sub' ? new SubQuestion() : new Question()) => this.quiz.push(quesion)\r\n  calculateScore = () => {\r\n    let\r\n      { quiz, config } = this,\r\n      { point, num } = config,\r\n      score = quiz.reduce((acc, vec) => acc + vec.is_exist * point, 0),\r\n      sup = point * num\r\n    return Math.min(score, sup)\r\n  }\r\n  remove = id => {\r\n    console.log('remove', id)\r\n    console.log(this.quiz.filter(q => q.is_exist))\r\n    let target = this.quiz.filter(q => q.is_exist)[id]\r\n    console.log('target', target)\r\n    target.is_exist = 0\r\n    console.log(this.quiz.filter(q => q.is_exist))\r\n  }\r\n}\r\n\r\nconst sheet_names = ['单选', '多选'], opts = ['ABCD', af], type_names = 'sm'\r\nconst sheet_head = i => ['题干', ...opts[i].split(''), '答案']\r\n\r\n// subjective\r\nconst subjective_sheet_names = ['主观']\r\nconst subjective_sheet_head = i => ['题干', '答案']\r\n\r\nexport class Paper {\r\n  @observable\r\n  head = {\r\n    title: '新未命名试卷',\r\n    'time-limit': 35,\r\n    'min-score': 60,\r\n    'max-times': 10,\r\n    'date-from': '1976-10-01T00:00',\r\n    'date-to': '2035-10-01T23:59',\r\n    'more-detail': '更多细节...',\r\n    'tip': '无',\r\n    'aim': 0\r\n  }\r\n  @observable\r\n  body = [\r\n    new Section('sc', '单选题'),\r\n    new Section('mc', '多选题'),\r\n    new Section('sub', '主观题')\r\n  ]\r\n  section = index => this.body[index]\r\n  calculateScore = () => this.body.reduce((acc, vec) => acc + vec.calculateScore(), 0)\r\n  calculateNum = () => this.body.reduce((acc, vec) => acc + vec.config.num * 1, 0)\r\n  canToExam = () => this.body.reduce((acc, sec) => acc && (sec.quesions().length >= sec.config.num), true)\r\n  resetSoftly = i => this.body[i].quiz = []\r\n  renew = () => {\r\n    this.head.id = undefined\r\n    this.body.forEach(sec =>\r\n      sec.quiz.forEach(que => que.id = undefined)\r\n    )\r\n  }\r\n  parseFromFile = async e => {\r\n    try {\r\n        let paper = new Paper()\r\n        for (let i = 0; i < sheet_names.length; i++) {\r\n            paper.resetSoftly(i)\r\n            for (let que of this.section(i).quiz)\r\n            que.id && paper.section(i).add(Question.EQ(que.id))\r\n        }\r\n        for (let i = 0; i < subjective_sheet_names.length; i++) {\r\n            paper.resetSoftly(i + sheet_names.length)\r\n            for (let que of this.section(i + sheet_names.length).quiz)\r\n            que.id && paper.section(i + sheet_names.length).add(SubQuestion.EQ(que.id))\r\n        }\r\n        let sheets = XLSX.read(new Uint8Array(e.target.result), { type: 'array' }).Sheets\r\n        for (let i = 0; sheet_names[i]; i++) {\r\n            let ques = XLSX.utils.sheet_to_json(sheets[sheet_names[i]])\r\n            if (!ques[0]) throw '格式不正确'\r\n            for (let que of ques) {\r\n                paper.section(i).add(Question.parseFromRow(que, opts[i]))\r\n                await Time.sleep(1)\r\n            }\r\n        }\r\n        for (let i = 0; subjective_sheet_names[i]; i++) {\r\n            let ques = XLSX.utils.sheet_to_json(sheets[subjective_sheet_names[i]])\r\n            if (!ques || !ques[0]) break;\r\n\r\n            for (let que of ques) {\r\n                paper.section(i + sheet_names.length).add(SubQuestion.parseFromRow(que))\r\n                await Time.sleep(1)\r\n            }\r\n        }\r\n\r\n      this.body = paper.body\r\n      window.hideLoading()\r\n      return { msg: true }\r\n    } catch (msg) {\r\n      window.hideLoading()\r\n      return { msg }\r\n    }\r\n  }\r\n  static parseFromDB = async (res, id, papers) => {\r\n    res = res.data\r\n    let target_paper = res.head\r\n    let paper = new Paper()\r\n    paper.head = {\r\n      id,\r\n      title: target_paper.name,\r\n      'time-limit': target_paper.duration,\r\n      'date-from': Time.stamp_to_datetime(target_paper.started_at),\r\n      'date-to': Time.stamp_to_datetime(target_paper.ended_at),\r\n      'max-times': target_paper.test_time,\r\n      'tip': target_paper.tip,\r\n      'related': target_paper.related,\r\n      'aim': target_paper.aim\r\n    }\r\n    let data = res.body\r\n    let len = data.length\r\n    for (let i = 0; i < len; i++) {\r\n      let ques = data[i].questions\r\n      await paper.resetSoftly(i)\r\n      if (data[i].name !== 'tizu3') {\r\n        for (let que of ques) {\r\n            paper.section(i).add(Question.parseFromDBQ(que))\r\n            await Time.sleep(1)\r\n        }\r\n      } else {\r\n        for (let que of ques) {\r\n            paper.section(i).add(SubQuestion.parseFromDBQ(que))\r\n            await Time.sleep(1)\r\n        }\r\n      }\r\n\r\n    }\r\n    return paper\r\n  }\r\n\r\n  parseToExcel() {\r\n    let wb = XLSX.utils.book_new()\r\n    sheet_names.forEach((name, i) =>\r\n      XLSX.utils.book_append_sheet(wb, XLSX.utils.aoa_to_sheet([sheet_head(i),\r\n      ...this.body[i].quesions().filter(q => q.is_exist).map(que =>\r\n        [que.title, ...que.getOptTextArr(opts[i]), que.getKeyStr()]\r\n      )]), name)\r\n    )\r\n\r\n    subjective_sheet_names.forEach((name, i) =>\r\n        XLSX.utils.book_append_sheet(wb, XLSX.utils.aoa_to_sheet([subjective_sheet_head(i),\r\n        ...this.body[i + sheet_names.length].quesions().filter(q => q.is_exist).map(que =>\r\n        [que.title, que.item]\r\n        )]), name)\r\n    )\r\n\r\n    return wb\r\n  }\r\n  getExamHead = () => ({\r\n    head: {\r\n      title: this.head.title,\r\n      start_date: Date.now(),\r\n      duration: this.head['time-limit'],\r\n      num: this.calculateNum()\r\n    }\r\n  })\r\n  getAUpLoad() {\r\n    if (this.calculateScore() === 0) throw '不允许试卷为空'\r\n    let len = this.body.length\r\n    for (let i = 0; i < len - 1; ++i) {\r\n        let sec = this.body[i]\r\n        for (let quiz of sec.quesions()) {\r\n            if (!quiz.is_exist) continue\r\n            if (quiz.title === '') throw '不允许题目为空'\r\n            else if (sec.config.type != 'sub') {\r\n                for (let opt of quiz.options())\r\n                    if (opt.text === '') throw '不允许选项为空'\r\n            }\r\n        }\r\n    }\r\n    let obj = {}\r\n    obj.head = {\r\n      id: this.head.id,\r\n      name: this.head.title,\r\n      test_time: this.head[\"max-times\"],\r\n      duration: this.head[\"time-limit\"],\r\n      tip: this.head[\"tip\"],\r\n      aim: this.head[\"aim\"],\r\n      started_at: Time.datetime_to_stamp(this.head[\"date-from\"]),\r\n      ended_at: Time.datetime_to_stamp(this.head[\"date-to\"]),\r\n      related: 0\r\n    }\r\n    obj.body = [\r\n        {\r\n            name: 'tizu1',\r\n            credit_per_question: 2,\r\n            draw_quantity: this.body[0].quesions().length,\r\n            is_subjective: 0,\r\n            questions: []\r\n        },\r\n        {\r\n            name: 'tizu2',\r\n            credit_per_question: 3,\r\n            draw_quantity: this.body[1].quesions().length,\r\n            is_subjective: 0,\r\n            questions: []\r\n        },\r\n        {\r\n            name: 'tizu3',\r\n            credit_per_question: 5,\r\n            draw_quantity: this.body[2].quesions().length,\r\n            is_subjective: 1,\r\n            questions: []\r\n        }]\r\n    this.body.forEach((sec, index) => {\r\n        if (sec.config.type !== 'sub') {\r\n            sec.quesions().map(que =>\r\n                obj.body[index].questions.push({\r\n                    topic: que.title,\r\n                    ...que.getOptTextObj(),\r\n                    answer: que.getKeyStr()\r\n                })\r\n            )\r\n        } else {\r\n            sec.quesions().map(que =>\r\n                obj.body[index].questions.push({\r\n                    topic: que.title,\r\n                    answer: que.item\r\n                })\r\n            )\r\n        }\r\n\r\n    })\r\n    return obj\r\n  }\r\n  getAExam() {\r\n    let exam = this.getExamHead()\r\n    exam.body = this.body.reduce((acc, sec) =>\r\n      [...acc, ...sec.quesions().shuffle().slice(-sec.config.num).map((que, k) =>\r\n        ({\r\n          id: `temp_${sec.config.type}_${k}`,\r\n          type: sec.config.type,\r\n          ...que.getOptTextObj(),\r\n          question: que.title\r\n        })\r\n      )]\r\n      , []).shuffle()\r\n    return exam\r\n  }\r\n}\r\n\r\nexport class Exam {\r\n  @observable\r\n  head = {\r\n    title: new String(),\r\n    start_date: new String(),\r\n    duration: new String(),\r\n    num: new Number()\r\n  }\r\n  @observable\r\n  body = [\r\n    {\r\n      question: []\r\n    }\r\n  ]\r\n  @observable\r\n  subjective = [\r\n    {\r\n      question: []\r\n    }\r\n  ]\r\n  submit() {\r\n    let result = {\r\n      paper_id: this.head.paper_id,\r\n      record: [],\r\n      sub_record: []\r\n    }\r\n    console.log(this.body)\r\n    this.body.concat(this.subjective).forEach(subj => {\r\n      let block = {\r\n        tag_id: subj.tag_id,\r\n        answers: subj.question.reduce((acc, val) => {\r\n          acc[val.id] = Array.isArray(val.stu_answer) ? val.stu_answer.join('') : val.stu_answer\r\n          return acc\r\n        }, {})\r\n      }\r\n      if (+subj.is_subjective) {\r\n          result.sub_record.push(block);\r\n      } else {\r\n          result.record.push(block);\r\n      }\r\n    //   let { stu_answer, time_stamp, type, id } = que\r\n    //   type === 'mc' && (stu_answer = stu_answer.join(''))\r\n    //   result[`${type}q`][id] = stu_answer || ''\r\n    //   result[`${type}q_t`][id] = time_stamp || 0\r\n    })\r\n    return result\r\n  }\r\n  cheat() {\r\n    return { paper_id: this.head.paper_id, mcq: {}, scq: {} }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}