{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { get } from '../../utils/request';\nvar date_list = {\n  '未发布': 'updated_at',\n  '已发布': 'started_at',\n  '已完成': 'ended_time'\n};\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return window.showLoading();\n\n          case 2:\n            _context.next = 4;\n            return get('api/college/papers/v1');\n\n          case 4:\n            res = _context.sent;\n            store.infoList.all_paper = res.data.map(function (paper) {\n              return _objectSpread({}, paper, {\n                title: paper.name,\n                date: \"\".concat(paper[date_list[paper.status]]).split(' ')[0]\n              });\n            });\n            _context.next = 8;\n            return window.hideLoading();\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\expaper\\all.js"],"names":["get","date_list","store","window","showLoading","res","infoList","all_paper","data","map","paper","title","name","date","status","split","hideLoading"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,qBAApB;AAEA,IAAMC,SAAS,GAAG;AAChB,SAAM,YADU;AAEhB,SAAM,YAFU;AAGhB,SAAM;AAHU,CAAlB;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPC,MAAM,CAACC,WAAP,EADO;;AAAA;AAAA;AAAA,mBAEGJ,GAAG,CAAC,uBAAD,CAFN;;AAAA;AAETK,YAAAA,GAFS;AAGbH,YAAAA,KAAK,CAACI,QAAN,CAAeC,SAAf,GAA2BF,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAa,UAAAC,KAAK;AAAA,uCACxCA,KADwC;AAE3CC,gBAAAA,KAAK,EAAED,KAAK,CAACE,IAF8B;AAG3CC,gBAAAA,IAAI,EAAC,UAAGH,KAAK,CAACT,SAAS,CAACS,KAAK,CAACI,MAAP,CAAV,CAAR,EAAoCC,KAApC,CAA0C,GAA1C,EAA+C,CAA/C;AAHsC;AAAA,aAAlB,CAA3B;AAHa;AAAA,mBAQPZ,MAAM,CAACa,WAAP,EARO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { get } from '../../utils/request'\r\n\r\nconst date_list = {\r\n  '未发布':'updated_at',\r\n  '已发布':'started_at',\r\n  '已完成':'ended_time'\r\n}\r\n\r\nexport default async store => {\r\n  await window.showLoading()\r\n  let res = await get('api/college/papers/v1')\r\n  store.infoList.all_paper = res.data.map(paper => ({\r\n    ...paper,\r\n    title: paper.name,\r\n    date:`${paper[date_list[paper.status]]}`.split(' ')[0]\r\n  }))\r\n  await window.hideLoading()\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}