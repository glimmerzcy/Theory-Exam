{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport XLSX from 'xlsx';\nimport { get } from '../../utils/request';\nvar head = ['学号', '姓名', '成绩', '是否通过'];\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store, paper_id) {\n    var res, wb, ws;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return get('students/transcript', {\n              paper_id: paper_id\n            });\n\n          case 2:\n            res = _context.sent;\n\n            if (res) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 5:\n            wb = XLSX.utils.book_new(), ws = XLSX.utils.aoa_to_sheet([head].concat(_toConsumableArray(res.map(function (v) {\n              return [v.stu_id, v.real_name, v.score, \"\".concat(v.score < 60 ? '不' : '', \"\\u901A\\u8FC7\")];\n            }))));\n            XLSX.utils.book_append_sheet(wb, ws, '学生成绩表');\n            XLSX.writeFile(wb, '学生成绩表.xls');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\excel\\export.js"],"names":["XLSX","get","head","store","paper_id","res","wb","utils","book_new","ws","aoa_to_sheet","map","v","stu_id","real_name","score","book_append_sheet","writeFile"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,GAAT,QAAoB,qBAApB;AAEA,IAAMC,IAAI,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,MAAnB,CAAb;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGH,GAAG,CAAC,qBAAD,EAAwB;AAAEG,cAAAA,QAAQ,EAARA;AAAF,aAAxB,CADN;;AAAA;AACTC,YAAAA,GADS;;AAAA,gBAERA,GAFQ;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKXC,YAAAA,EALW,GAKNN,IAAI,CAACO,KAAL,CAAWC,QAAX,EALM,EAMXC,EANW,GAMNT,IAAI,CAACO,KAAL,CAAWG,YAAX,EAAyBR,IAAzB,4BAAkCG,GAAG,CAACM,GAAJ,CAAQ,UAAAC,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACC,MAAH,EAAWD,CAAC,CAACE,SAAb,EAAwBF,CAAC,CAACG,KAA1B,YAAoCH,CAAC,CAACG,KAAF,GAAU,EAAV,GAAe,GAAf,GAAqB,EAAzD,kBAAJ;AAAA,aAAT,CAAlC,GANM;AAObf,YAAAA,IAAI,CAACO,KAAL,CAAWS,iBAAX,CAA6BV,EAA7B,EAAiCG,EAAjC,EAAqC,OAArC;AACAT,YAAAA,IAAI,CAACiB,SAAL,CAAeX,EAAf,EAAmB,WAAnB;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import XLSX from 'xlsx'\r\nimport { get } from '../../utils/request'\r\n\r\nconst head = ['学号', '姓名', '成绩', '是否通过']\r\n\r\nexport default async (store, paper_id) => {\r\n  let res = await get('students/transcript', { paper_id })\r\n  if (!res)\r\n    return\r\n  let\r\n    wb = XLSX.utils.book_new(),\r\n    ws = XLSX.utils.aoa_to_sheet([head, ...res.map(v => [v.stu_id, v.real_name, v.score, `${v.score < 60 ? '不' : ''}通过`])])\r\n  XLSX.utils.book_append_sheet(wb, ws, '学生成绩表')\r\n  XLSX.writeFile(wb, '学生成绩表.xls')\r\n}"]},"metadata":{},"sourceType":"module"}