{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\api\\\\exam\\\\get.js\";\nimport React from 'react';\nimport { post } from '../../utils/request';\nimport { Exam } from '../../config/ClassDefine';\nimport Route from '../../config/RouteConfig';\nimport cookieManage from '../../utils/cookieManage';\nimport { submitAnswer } from '../../pages/Exam/Exam';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(store, _ref) {\n    var paper_id, title, tip, bar;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            paper_id = _ref.paper_id, title = _ref.title, tip = _ref.tip;\n\n            bar =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        window.showModal({\n                          view: React.createElement(\"h4\", {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 11\n                            },\n                            __self: this\n                          }, \"\\u68C0\\u6D4B\\u5230\\u672C\\u5730\\u50A8\\u5B58\\u6709\\u4E0A\\u6B21\\u672A\\u63D0\\u4EA4\\u6210\\u529F\\u7684\\u8BB0\\u5F55, \\u70B9\\u51FB\\u786E\\u8BA4\\u5C06\\u4E3A\\u60A8\\u91CD\\u65B0\\u63D0\\u4EA4\\uFF0C\\u70B9\\u51FB\\u53D6\\u6D88\\u5C06\\u4F5C\\u5E9F\\u4E0A\\u6B21\\u7B54\\u9898\"),\n                          onConfirm: submitAnswer,\n                          onCancel: function onCancel() {\n                            return cookieManage.deleteStoreCookie();\n                          }\n                        });\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n\n              return function bar() {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            if (!cookieManage.cookieProxyInstance.submitData0) {\n              _context3.next = 7;\n              break;\n            }\n\n            _context3.next = 5;\n            return bar();\n\n          case 5:\n            _context3.next = 8;\n            break;\n\n          case 7:\n            window.showModal({\n              view: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 21\n                },\n                __self: this\n              }, React.createElement(\"h2\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 22\n                },\n                __self: this\n              }, \"Warm Tip \\u6E29\\u99A8\\u63D0\\u793A\"), tip ? React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 25\n                },\n                __self: this\n              }, tip) : null, React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 28\n                },\n                __self: this\n              }, \"In order to avoid any accident, please do not let your room-mate run or romp about in front of screen or climb the seats or hold the crack of the door or touch the electric water boiler\\uFF0Cwhen you are taking this online exam.\"), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 29\n                },\n                __self: this\n              }, \"\\u5F53\\u4F60\\u5728\\u8FDB\\u884C\\u8003\\u8BD5\\u7684\\u65F6\\u5019\\uFF0C\\u8BF7\\u52FF\\u8BA9\\u4F60\\u7684\\u5BA4\\u53CB\\u5728\\u5C4F\\u5E55\\u524D\\u5954\\u8DD1\\u3001\\u6253\\u95F9\\u3001\\u6500\\u722C\\u5EA7\\u6905\\u3001\\u624B\\u6276\\u95E8\\u7F1D\\u3001\\u89E6\\u78B0\\u7535\\u8336\\u7089\\u7B49\\uFF0C\\u4EE5\\u514D\\u53D1\\u751F\\u610F\\u5916\\u4F24\\u5BB3\\u3002\"), React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 30\n                },\n                __self: this\n              }, \"\\u63A8\\u8350\\u4F7F\\u7528 Chrome/FireFox/Safari \\u6D4F\\u89C8\\u5668\\uFF0C\\u6700\\u597D\\u4F7F\\u7528\\u6821\\u56ED\\u7F51\\u8FDB\\u884C\\u7B54\\u9898\\u3002\\u4E0D\\u8981\\u4F7F\\u7528\\u624B\\u673A\\u3001\\u5FAE\\u4FE1\\u548CQQ\\u5185\\u7F6E\\u6D4F\\u89C8\\u5668\\u8FDB\\u884C\\u7B54\\u9898\\u3002\")),\n              onConfirm: function () {\n                var _onConfirm = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2() {\n                  var res, exam, data, question, subjective;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return window.showLoading();\n\n                        case 2:\n                          _context2.next = 4;\n                          return post('api/student/test/draw/v1', {\n                            paper_id: paper_id\n                          });\n\n                        case 4:\n                          res = _context2.sent;\n                          exam = new Exam(), data = res.data;\n                          exam.head = _objectSpread({}, store.infoList.exam_paper.head, {\n                            paper_id: data.paper_id,\n                            title: title,\n                            num: data.total_number,\n                            start_date: new Date().getTime()\n                          });\n                          question = [], subjective = [];\n                          data.questions.forEach(function (ele) {\n                            return +ele.is_subjective ? subjective.push(ele) : question.push(ele);\n                          });\n                          exam.body = question;\n                          exam.subjective = subjective; // exam.body = [question[0], ...question.slice(1, question.length - 1).shuffle(), question.pop()]\n\n                          store.infoList.exam_paper = exam;\n                          window.navigateTo(Route.Exam.route);\n                          _context2.next = 15;\n                          return window.hideLoading();\n\n                        case 15:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                function onConfirm() {\n                  return _onConfirm.apply(this, arguments);\n                }\n\n                return onConfirm;\n              }(),\n              confirmText: '开始考试'\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this);\n  }));\n\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\exam\\get.js"],"names":["React","post","Exam","Route","cookieManage","submitAnswer","store","paper_id","title","tip","bar","window","showModal","view","onConfirm","onCancel","deleteStoreCookie","cookieProxyInstance","submitData0","showLoading","res","exam","data","head","infoList","exam_paper","num","total_number","start_date","Date","getTime","question","subjective","questions","forEach","ele","is_subjective","push","body","navigateTo","route","hideLoading","confirmText"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { post } from '../../utils/request'\r\nimport { Exam } from '../../config/ClassDefine'\r\nimport Route from '../../config/RouteConfig'\r\nimport cookieManage from '../../utils/cookieManage'\r\nimport { submitAnswer } from '../../pages/Exam/Exam'\r\n\r\nexport default async (store, { paper_id, title, tip }) => {\r\n  let bar = async () => {\r\n    window.showModal({\r\n      view: <h4>检测到本地储存有上次未提交成功的记录, 点击确认将为您重新提交，点击取消将作废上次答题</h4>,\r\n      onConfirm: submitAnswer,\r\n      onCancel: () => cookieManage.deleteStoreCookie()\r\n    })\r\n  }\r\n  if (cookieManage.cookieProxyInstance.submitData0) {\r\n    await bar()\r\n  } else {\r\n    window.showModal({\r\n      view: (\r\n        <div>\r\n          <h2>Warm Tip 温馨提示</h2>\r\n          {\r\n              tip\r\n              ? <p>{tip}</p>\r\n              : null\r\n          }\r\n          <p>In order to avoid any accident, please do not let your room-mate run or romp about in front of screen or climb the seats or hold the crack of the door or touch the electric water boiler，when you are taking this online exam.</p>\r\n          <p>当你在进行考试的时候，请勿让你的室友在屏幕前奔跑、打闹、攀爬座椅、手扶门缝、触碰电茶炉等，以免发生意外伤害。</p>\r\n          <h4>\r\n              推荐使用 Chrome/FireFox/Safari 浏览器，最好使用校园网进行答题。不要使用手机、微信和QQ内置浏览器进行答题。\r\n          </h4>\r\n        </div>\r\n      ),\r\n      onConfirm: async () => {\r\n        await window.showLoading()\r\n        let res = await post('api/student/test/draw/v1', { paper_id })\r\n        let exam = new Exam(), { data } = res\r\n        exam.head = {\r\n          ...store.infoList.exam_paper.head,\r\n          paper_id: data.paper_id,\r\n          title: title,\r\n          num: data.total_number,\r\n          start_date: new Date().getTime(),\r\n        }\r\n        let question = [], subjective = []\r\n        data.questions.forEach(ele => +ele.is_subjective ? subjective.push(ele) : question.push(ele))\r\n        exam.body = question\r\n        exam.subjective = subjective;\r\n        // exam.body = [question[0], ...question.slice(1, question.length - 1).shuffle(), question.pop()]\r\n        store.infoList.exam_paper = exam\r\n        window.navigateTo(Route.Exam.route)\r\n        await window.hideLoading()\r\n      },\r\n      confirmText:'开始考试'\r\n    })\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}