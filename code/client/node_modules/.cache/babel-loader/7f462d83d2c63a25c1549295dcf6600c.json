{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _class,\n    _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\components\\\\InfoList\\\\InfoTable.jsx\",\n    _class2;\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport './InfoTable.css';\n\nvar TableRow = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TableRow, _React$Component);\n\n  function TableRow() {\n    _classCallCheck(this, TableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TableRow).apply(this, arguments));\n  }\n\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          assign = _this$props.assign,\n          keyo = _this$props.keyo;\n      return assign.map(function (elm, i) {\n        return React.createElement(\"td\", {\n          key: keyo + i,\n          className: \"info-table-cell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, elm);\n      });\n    }\n  }]);\n\n  return TableRow;\n}(React.Component)) || _class;\n\nvar InfoTable = observer(_class2 =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(InfoTable, _React$Component2);\n\n  function InfoTable() {\n    _classCallCheck(this, InfoTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InfoTable).apply(this, arguments));\n  }\n\n  _createClass(InfoTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          head = _this$props2.head,\n          assign = _this$props2.assign,\n          keyo = _this$props2.keyo;\n      var contentKey = \"\".concat(keyo, \"-head-\");\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"info-table-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        keyo: contentKey,\n        assign: head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), assign.map(function (elm, i) {\n        return React.createElement(\"tr\", {\n          key: keyo + i + '-',\n          className: \"info-table-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          keyo: keyo + i + '-',\n          assign: elm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return InfoTable;\n}(React.Component)) || _class2;\n\nexport default InfoTable;","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\components\\InfoList\\InfoTable.jsx"],"names":["React","observer","TableRow","props","assign","keyo","map","elm","i","Component","InfoTable","head","contentKey"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,iBAAP;;IAGMC,Q,GADLD,Q;;;;;;;;;;;;;6BAEU;AAAA,wBACa,KAAKE,KADlB;AAAA,UACFC,MADE,eACFA,MADE;AAAA,UACKC,IADL,eACKA,IADL;AAEP,aAAOD,MAAM,CAACE,GAAP,CAAW,UAACC,GAAD,EAAKC,CAAL;AAAA,eAChB;AAAI,UAAA,GAAG,EAAEH,IAAI,GAAGG,CAAhB;AAAoB,UAAA,SAAS,EAAC,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiDD,GAAjD,CADgB;AAAA,OAAX,CAAP;AAGD;;;;EANoBP,KAAK,CAACS,S;;IAUvBC,S,GADLT,Q;;;;;;;;;;;;;6BAEU;AAAA,yBACkB,KAAKE,KADvB;AAAA,UACFQ,IADE,gBACFA,IADE;AAAA,UACGP,MADH,gBACGA,MADH;AAAA,UACUC,IADV,gBACUA,IADV;AAEP,UAAIO,UAAU,aAAMP,IAAN,WAAd;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEO,UAAhB;AAA4B,QAAA,MAAM,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CADF,EAGIP,MAAM,CAACE,GAAP,CAAW,UAACC,GAAD,EAAKC,CAAL;AAAA,eACT;AAAI,UAAA,GAAG,EAAEH,IAAI,GAAGG,CAAP,GAAW,GAApB;AAAyB,UAAA,SAAS,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEH,IAAI,GAAEG,CAAN,GAAU,GAA1B;AAA+B,UAAA,MAAM,EAAED,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADS;AAAA,OAAX,CAHJ,CADF;AAYD;;;;EAhBqBP,KAAK,CAACS,S;;AAmB9B,eAAeC,SAAf","sourcesContent":["import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './InfoTable.css'\r\n\r\n@observer\r\nclass TableRow extends React.Component {\r\n  render() {\r\n    let {assign,keyo} = this.props\r\n    return assign.map((elm,i) =>\r\n      <td key={keyo + i}  className='info-table-cell'>{elm}</td>\r\n    )\r\n  }\r\n}\r\n\r\n@observer\r\nclass InfoTable extends React.Component {\r\n  render() {\r\n    let {head,assign,keyo} = this.props\r\n    let contentKey = `${keyo}-head-`\r\n    return (\r\n      <tbody>\r\n        <tr className='info-table-head'><TableRow keyo={contentKey} assign={head} /></tr>\r\n        {\r\n          assign.map((elm,i) =>\r\n            <tr key={keyo + i + '-'} className='info-table-row'>\r\n              <TableRow keyo={keyo+ i + '-'} assign={elm} />\r\n            </tr>\r\n          )\r\n        }\r\n      </tbody>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfoTable"]},"metadata":{},"sourceType":"module"}