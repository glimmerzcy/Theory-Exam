{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\pages\\\\Notice\\\\Notice.jsx\",\n    _class;\n\nimport React from 'react';\nimport url from 'url';\nimport { observer } from 'mobx-react';\nimport './Notice.css';\nimport Craousel from '../../components/InfoList/InfoCraousel';\nimport Title from '../../components/InfoList/InfoTitle';\nimport Store from '../../utils/Store';\nvar cursor = {\n  cursor: 'pointer',\n  maxWidth: '200px',\n  maxHeight: '2em',\n  overflow: 'hidden'\n};\n\nvar parseNotice = function parseNotice(notice) {\n  return notice.map(function (e) {\n    return [React.createElement(\"div\", {\n      onClick: function onClick() {\n        return window.navigateTo(e.url);\n      },\n      style: cursor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, e.info), e.time];\n  });\n};\n\nvar id = -1;\n\nvar Notice = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notice, _React$Component);\n\n  function Notice() {\n    _classCallCheck(this, Notice);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Notice).apply(this, arguments));\n  }\n\n  _createClass(Notice, [{\n    key: \"render\",\n    value: function render() {\n      var url_id = url.parse(this.props.location.search, true).query.id;\n\n      if (url_id != id) {\n        id = url_id;\n      }\n\n      var _ref = Store.infoList.notice[id] ? Store.infoList.notice[id] : {},\n          info = _ref.info,\n          time = _ref.time,\n          detail = _ref.detail;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row aside\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notice-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notice-info notice-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, info), React.createElement(\"div\", {\n        className: \"notice-time notice-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, time), React.createElement(\"div\", {\n        className: \"notice-detail notice-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, detail)), React.createElement(\"div\", {\n        className: \"notice-craousel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Title, {\n        title: \"\\u901A\\u77E5\\u516C\\u544A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Craousel, {\n        key: \"notice\",\n        list: parseNotice(Store.infoList.notice),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Notice;\n}(React.Component)) || _class;\n\nexport default Notice;","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\pages\\Notice\\Notice.jsx"],"names":["React","url","observer","Craousel","Title","Store","cursor","maxWidth","maxHeight","overflow","parseNotice","notice","map","e","window","navigateTo","info","time","id","Notice","url_id","parse","props","location","search","query","infoList","detail","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAO,cAAP;AAEA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,IAAMC,MAAM,GAAG;AAAEA,EAAAA,MAAM,EAAE,SAAV;AAAqBC,EAAAA,QAAQ,EAAE,OAA/B;AAAwCC,EAAAA,SAAS,EAAE,KAAnD;AAA0DC,EAAAA,QAAQ,EAAE;AAApE,CAAf;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SAAIA,MAAM,CAACC,GAAP,CAAW,UAAAC,CAAC;AAAA,WAAI,CAAC;AAAK,MAAA,OAAO,EAAE;AAAA,eAAMC,MAAM,CAACC,UAAP,CAAkBF,CAAC,CAACZ,GAApB,CAAN;AAAA,OAAd;AAA8C,MAAA,KAAK,EAAEK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DO,CAAC,CAACG,IAAhE,CAAD,EAA8EH,CAAC,CAACI,IAAhF,CAAJ;AAAA,GAAZ,CAAJ;AAAA,CAA1B;;AAEA,IAAIC,EAAE,GAAG,CAAC,CAAV;;IAGMC,M,GADLjB,Q;;;;;;;;;;;;;6BAEY;AACL,UAAIkB,MAAM,GAAGnB,GAAG,CAACoB,KAAJ,CAAU,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAA9B,EAAsC,IAAtC,EAA4CC,KAA5C,CAAkDP,EAA/D;;AACA,UAAIE,MAAM,IAAIF,EAAd,EAAkB;AACdA,QAAAA,EAAE,GAAGE,MAAL;AACH;;AAJI,iBAKwBf,KAAK,CAACqB,QAAN,CAAef,MAAf,CAAsBO,EAAtB,IAA4Bb,KAAK,CAACqB,QAAN,CAAef,MAAf,CAAsBO,EAAtB,CAA5B,GAAwD,EALhF;AAAA,UAKCF,IALD,QAKCA,IALD;AAAA,UAKOC,IALP,QAKOA,IALP;AAAA,UAKaU,MALb,QAKaA,MALb;;AAML,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CX,IAA1C,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CC,IAA1C,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CU,MAA5C,CAHJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAEjB,WAAW,CAACL,KAAK,CAACqB,QAAN,CAAef,MAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,CADJ,CADJ;AAeH;;;;EAtBgBX,KAAK,CAAC4B,S;;AAyB3B,eAAeT,MAAf","sourcesContent":["import React from 'react'\r\nimport url from 'url'\r\nimport { observer } from 'mobx-react'\r\nimport './Notice.css'\r\n\r\nimport Craousel from '../../components/InfoList/InfoCraousel'\r\nimport Title from '../../components/InfoList/InfoTitle'\r\n\r\nimport Store from '../../utils/Store'\r\n\r\nconst cursor = { cursor: 'pointer', maxWidth: '200px', maxHeight: '2em', overflow: 'hidden' }\r\n\r\nconst parseNotice = notice => notice.map(e => [<div onClick={() => window.navigateTo(e.url)} style={cursor}>{e.info}</div>, e.time])\r\n\r\nlet id = -1\r\n\r\n@observer\r\nclass Notice extends React.Component {\r\n    render() {\r\n        let url_id = url.parse(this.props.location.search, true).query.id\r\n        if (url_id != id) {\r\n            id = url_id\r\n        }\r\n        let { info, time, detail } = Store.infoList.notice[id] ? Store.infoList.notice[id] : {}\r\n        return (\r\n            <div>\r\n                <div className='row aside'>\r\n                    <div className='notice-content'>\r\n                        <div className='notice-info notice-text'>{info}</div>\r\n                        <div className='notice-time notice-text'>{time}</div>\r\n                        <div className='notice-detail notice-text'>{detail}</div>\r\n                    </div>\r\n                    <div className='notice-craousel'>\r\n                        <Title title='通知公告' />\r\n                        <Craousel key='notice' list={parseNotice(Store.infoList.notice)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notice\r\n"]},"metadata":{},"sourceType":"module"}