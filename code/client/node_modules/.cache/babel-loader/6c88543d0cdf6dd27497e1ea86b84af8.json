{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\nvar statusFilter = function statusFilter(targetStatus) {\n  return {\n    text: targetStatus,\n    func: function func(item) {\n      return targetStatus == item.status;\n    }\n  };\n};\n\nexport var filters = [{\n  text: '全部试卷',\n  func: function func() {\n    return true;\n  }\n}].concat(_toConsumableArray(['未发布', '已发布', '已完成'].map(statusFilter)));\nexport var sorts = [{\n  text: '从旧到新',\n  func: function func(a, b) {\n    return dateSort(a, b);\n  }\n}, {\n  text: '从新到旧',\n  func: function func(a, b) {\n    return -dateSort(a, b);\n  }\n}, {\n  text: '随机',\n  func: function func() {\n    return Math.random() - .5;\n  }\n}];\n\nvar dateSort = function dateSort(a, b) {\n  return [a, b].map(function (vec) {\n    return vec.date.split('-');\n  }).mutiply([[1, -1]])[0].reduce(function (acc, num) {\n    return acc !== 0 ? acc : num;\n  }, 0);\n}; //const dateSort = (a, b) => [a, b].map(elm => elm.date.split('-')).transpose().reduce((acc, vec) => acc !== 0 ? acc : vec[0] - vec[1], 0)","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\config\\page\\ExPaper.js"],"names":["statusFilter","targetStatus","text","func","item","status","filters","map","sorts","a","b","dateSort","Math","random","vec","date","split","mutiply","reduce","acc","num"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAAC,YAAY;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAACD,YAD+B;AAEpCE,IAAAA,IAAI,EAAC,cAAAC,IAAI;AAAA,aAAIH,YAAY,IAAIG,IAAI,CAACC,MAAzB;AAAA;AAF2B,GAAL;AAAA,CAAjC;;AAKA,OAAO,IAAMC,OAAO,IAClB;AACEJ,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE;AAAA,WAAM,IAAN;AAAA;AAFR,CADkB,4BAKf,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAoBI,GAApB,CAAwBP,YAAxB,CALe,EAAb;AAQP,OAAO,IAAMQ,KAAK,GAAG,CACnB;AACEN,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE,cAACM,CAAD,EAAIC,CAAJ;AAAA,WAAUC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAlB;AAAA;AAFR,CADmB,EAKnB;AACER,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,IAAI,EAAE,cAACM,CAAD,EAAIC,CAAJ;AAAA,WAAU,CAACC,QAAQ,CAACF,CAAD,EAAIC,CAAJ,CAAnB;AAAA;AAFR,CALmB,EASnB;AACER,EAAAA,IAAI,EAAE,IADR;AAEEC,EAAAA,IAAI,EAAE;AAAA,WAAMS,IAAI,CAACC,MAAL,KAAgB,EAAtB;AAAA;AAFR,CATmB,CAAd;;AAeP,IAAMF,QAAQ,GAAG,SAAXA,QAAW,CAACF,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAACD,CAAD,EAAIC,CAAJ,EAAOH,GAAP,CAAW,UAAAO,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,GAAf,CAAJ;AAAA,GAAd,EAAuCC,OAAvC,CAA+C,CAAC,CAAC,CAAD,EAAG,CAAC,CAAJ,CAAD,CAA/C,EAAyD,CAAzD,EAA4DC,MAA5D,CAAmE,UAACC,GAAD,EAAMC,GAAN;AAAA,WAAcD,GAAG,KAAK,CAAR,GAAYA,GAAZ,GAAkBC,GAAhC;AAAA,GAAnE,EAAwG,CAAxG,CAAV;AAAA,CAAjB,C,CACA","sourcesContent":["const statusFilter = targetStatus => ({\r\n  text:targetStatus,\r\n  func:item => targetStatus == item.status\r\n})\r\n\r\nexport const filters = [\r\n  {\r\n    text: '全部试卷',\r\n    func: () => true\r\n  },\r\n  ...['未发布','已发布','已完成'].map(statusFilter)\r\n]\r\n\r\nexport const sorts = [\r\n  {\r\n    text: '从旧到新',\r\n    func: (a, b) => dateSort(a, b)\r\n  },\r\n  {\r\n    text: '从新到旧',\r\n    func: (a, b) => -dateSort(a, b)\r\n  },\r\n  {\r\n    text: '随机',\r\n    func: () => Math.random() - .5\r\n  },\r\n]\r\n\r\nconst dateSort = (a, b) => [a, b].map(vec => vec.date.split('-')).mutiply([[1,-1]])[0].reduce((acc, num) => acc !== 0 ? acc : num, 0)\r\n//const dateSort = (a, b) => [a, b].map(elm => elm.date.split('-')).transpose().reduce((acc, vec) => acc !== 0 ? acc : vec[0] - vec[1], 0)"]},"metadata":{},"sourceType":"module"}