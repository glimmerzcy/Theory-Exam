{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { get } from '../../utils/request';\nimport Route from '../../config/RouteConfig';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(store.state.status === 'college')) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return get('api/college/logout/v1');\n\n          case 3:\n            response = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return get('api/logout');\n\n          case 8:\n            response = _context.sent;\n\n          case 9:\n            if (response) {\n              store.state.status = 'unknown';\n              window.navigateTo(Route.Index.route);\n              window.showToast('退出成功');\n            } else {\n              window.showToast('退出失败');\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\log\\out.js"],"names":["get","Route","store","state","status","response","window","navigateTo","Index","route","showToast"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEPA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAuB,SAFhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGUJ,GAAG,CAAC,uBAAD,CAHb;;AAAA;AAGPK,YAAAA,QAHO;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAKUL,GAAG,CAAC,YAAD,CALb;;AAAA;AAKPK,YAAAA,QALO;;AAAA;AAOX,gBAAIA,QAAJ,EAAc;AACVH,cAAAA,KAAK,CAACC,KAAN,CAAYC,MAAZ,GAAqB,SAArB;AACAE,cAAAA,MAAM,CAACC,UAAP,CAAkBN,KAAK,CAACO,KAAN,CAAYC,KAA9B;AACAH,cAAAA,MAAM,CAACI,SAAP,CAAiB,MAAjB;AACH,aAJD,MAIO;AACHJ,cAAAA,MAAM,CAACI,SAAP,CAAiB,MAAjB;AACH;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { get } from '../../utils/request'\r\nimport Route from '../../config/RouteConfig'\r\n\r\nexport default async (store) => {\r\n    let response\r\n    if (store.state.status === 'college') {\r\n        response = await get('api/college/logout/v1')\r\n    } else {\r\n        response = await get('api/logout')\r\n    }\r\n    if (response) {\r\n        store.state.status = 'unknown'\r\n        window.navigateTo(Route.Index.route)\r\n        window.showToast('退出成功')\r\n    } else {\r\n        window.showToast('退出失败')\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}