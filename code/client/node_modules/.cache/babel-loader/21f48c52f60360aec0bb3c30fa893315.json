{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\src\\\\components\\\\ScoreChart.jsx\";\nimport React from 'react';\nimport { Chart, Axis, Tooltip, Geom } from 'bizcharts';\nimport { axis, gemo, width, height } from '../config/component/Chart';\n\nvar ScoreChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScoreChart, _React$Component);\n\n  function ScoreChart() {\n    _classCallCheck(this, ScoreChart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScoreChart).apply(this, arguments));\n  }\n\n  _createClass(ScoreChart, [{\n    key: \"render\",\n    value: function render() {\n      var chart = this.props.chart;\n      return React.createElement(Chart, {\n        width: width,\n        height: height,\n        data: chart,\n        forceFit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Axis, {\n        name: axis.x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(Axis, {\n        name: axis.y,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        crosshairs: {\n          type: 'rect'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }), React.createElement(Geom, Object.assign({}, gemo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ScoreChart;\n}(React.Component);\n\nexport default ScoreChart;","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\components\\ScoreChart.jsx"],"names":["React","Chart","Axis","Tooltip","Geom","axis","gemo","width","height","ScoreChart","chart","props","x","y","type","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,IAA/B,QAA2C,WAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,2BAA1C;;IAEMC,U;;;;;;;;;;;;;6BACK;AAAA,UACFC,KADE,GACO,KAAKC,KADZ,CACFD,KADE;AAEP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,KAAd;AAAqB,QAAA,MAAM,EAAEC,MAA7B;AAAqC,QAAA,IAAI,EAAEE,KAA3C;AAAkD,QAAA,QAAQ,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,IAAI,CAACO,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEP,IAAI,CAACQ,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,IAAD,oBAAUR,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAQD;;;;EAXsBN,KAAK,CAACe,S;;AAc/B,eAAeN,UAAf","sourcesContent":["import React from 'react'\r\nimport { Chart, Axis, Tooltip, Geom } from 'bizcharts'\r\nimport { axis, gemo ,width ,height } from '../config/component/Chart'\r\n\r\nclass ScoreChart extends React.Component {\r\n  render() {\r\n    let {chart} = this.props\r\n    return (\r\n      <Chart width={width} height={height} data={chart} forceFit>\r\n        <Axis name={axis.x} />\r\n        <Axis name={axis.y} />\r\n        <Tooltip crosshairs={{ type: 'rect' }} />\r\n        <Geom {...gemo} />\r\n      </Chart>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ScoreChart"]},"metadata":{},"sourceType":"module"}