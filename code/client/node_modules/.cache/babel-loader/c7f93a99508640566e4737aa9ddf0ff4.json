{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar _default =\n/*#__PURE__*/\nfunction () {\n  function _default() {\n    _classCallCheck(this, _default);\n  }\n\n  _createClass(_default, null, [{\n    key: \"stamp_to_datetime\",\n    value: function stamp_to_datetime(stamp) {\n      var _stamp$match = stamp.match(/(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):\\d{2}/),\n          _stamp$match2 = _slicedToArray(_stamp$match, 6),\n          input = _stamp$match2[0],\n          Y = _stamp$match2[1],\n          M = _stamp$match2[2],\n          D = _stamp$match2[3],\n          h = _stamp$match2[4],\n          m = _stamp$match2[5];\n\n      return \"\".concat(Y, \"-\").concat(M, \"-\").concat(D, \"T\").concat(h, \":\").concat(m);\n    }\n  }, {\n    key: \"datetime_to_stamp\",\n    value: function datetime_to_stamp(datetime) {\n      var _datetime$match = datetime.match(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2})/),\n          _datetime$match2 = _slicedToArray(_datetime$match, 6),\n          input = _datetime$match2[0],\n          Y = _datetime$match2[1],\n          M = _datetime$match2[2],\n          D = _datetime$match2[3],\n          h = _datetime$match2[4],\n          m = _datetime$match2[5];\n\n      return \"\".concat(Y, \"-\").concat(M, \"-\").concat(D, \" \").concat(h, \":\").concat(m, \":00\");\n    }\n  }]);\n\n  return _default;\n}();\n\n_default.sleep = function (duration) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, duration);\n  });\n};\n\nexport { _default as default };","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\utils\\Time.js"],"names":["stamp","match","input","Y","M","D","h","m","datetime","sleep","duration","Promise","resolve","setTimeout"],"mappings":";;;;;;;;;;;;;sCAE2BA,K,EAAO;AAAA,yBACDA,KAAK,CAACC,KAAN,CAAY,+CAAZ,CADC;AAAA;AAAA,UACzBC,KADyB;AAAA,UAClBC,CADkB;AAAA,UACfC,CADe;AAAA,UACZC,CADY;AAAA,UACTC,CADS;AAAA,UACNC,CADM;;AAE9B,uBAAUJ,CAAV,cAAeC,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BC,CAA9B;AACD;;;sCACwBC,Q,EAAU;AAAA,4BACJA,QAAQ,CAACP,KAAT,CAAe,yCAAf,CADI;AAAA;AAAA,UAC5BC,KAD4B;AAAA,UACrBC,CADqB;AAAA,UAClBC,CADkB;AAAA,UACfC,CADe;AAAA,UACZC,CADY;AAAA,UACTC,CADS;;AAEjC,uBAAUJ,CAAV,cAAeC,CAAf,cAAoBC,CAApB,cAAyBC,CAAzB,cAA8BC,CAA9B;AACD;;;;;;SARME,K,GAAQ,UAAAC,QAAQ;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,QAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,C","sourcesContent":["export default class {\r\n  static sleep = duration => new Promise(resolve => setTimeout(resolve, duration))\r\n  static stamp_to_datetime(stamp) {\r\n    let [input, Y, M, D, h, m] = stamp.match(/(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):\\d{2}/)\r\n    return `${Y}-${M}-${D}T${h}:${m}`\r\n  }\r\n  static datetime_to_stamp(datetime) {\r\n    let [input, Y, M, D, h, m] = datetime.match(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2})/)\r\n    return `${Y}-${M}-${D} ${h}:${m}:00`\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}