{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\sunli\\\\Documents\\\\GitHub\\\\Theory-Exam\\\\code\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { get } from '../../utils/request';\n\nvar getFilter = function getFilter(stus, key) {\n  return _toConsumableArray(new Set(stus.map(function (stu) {\n    return stu[key];\n  })));\n};\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(store) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return get('user/students');\n\n          case 2:\n            res = _context.sent;\n            store.infoList.all_stus = res.map(function (stu) {\n              return [stu.edu_level, stu.grade, stu.academic, stu.profession, stu.class, stu.real_name, stu.stu_id];\n            });\n            store.infoList.stu_table = store.infoList.all_stus;\n            store.infoList.stu_table_filter = [getFilter(res, 'edu_level'), getFilter(res, 'grade'), getFilter(res, 'academic'), getFilter(res, 'profession'), getFilter(res, 'class'), [], []];\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\sunli\\Documents\\GitHub\\Theory-Exam\\code\\client\\src\\api\\selStu\\get.js"],"names":["get","getFilter","stus","key","Set","map","stu","store","res","infoList","all_stus","edu_level","grade","academic","profession","class","real_name","stu_id","stu_table","stu_table_filter"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,qBAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,GAAP;AAAA,4BAAmB,IAAIC,GAAJ,CAAQF,IAAI,CAACG,GAAL,CAAS,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACH,GAAD,CAAP;AAAA,GAAZ,CAAR,CAAnB;AAAA,CAAlB;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAMI,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGP,GAAG,CAAC,eAAD,CADN;;AAAA;AACTQ,YAAAA,GADS;AAEbD,YAAAA,KAAK,CAACE,QAAN,CAAeC,QAAf,GAA0BF,GAAG,CAACH,GAAJ,CAAQ,UAAAC,GAAG;AAAA,qBAAI,CACvCA,GAAG,CAACK,SADmC,EAEvCL,GAAG,CAACM,KAFmC,EAGvCN,GAAG,CAACO,QAHmC,EAIvCP,GAAG,CAACQ,UAJmC,EAKvCR,GAAG,CAACS,KALmC,EAMvCT,GAAG,CAACU,SANmC,EAOvCV,GAAG,CAACW,MAPmC,CAAJ;AAAA,aAAX,CAA1B;AASAV,YAAAA,KAAK,CAACE,QAAN,CAAeS,SAAf,GAA2BX,KAAK,CAACE,QAAN,CAAeC,QAA1C;AACAH,YAAAA,KAAK,CAACE,QAAN,CAAeU,gBAAf,GAAkC,CAChClB,SAAS,CAACO,GAAD,EAAM,WAAN,CADuB,EAEhCP,SAAS,CAACO,GAAD,EAAM,OAAN,CAFuB,EAGhCP,SAAS,CAACO,GAAD,EAAM,UAAN,CAHuB,EAIhCP,SAAS,CAACO,GAAD,EAAM,YAAN,CAJuB,EAKhCP,SAAS,CAACO,GAAD,EAAM,OAAN,CALuB,EAMhC,EANgC,EAOhC,EAPgC,CAAlC;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { get } from '../../utils/request'\r\n\r\nconst getFilter = (stus, key) => [...new Set(stus.map(stu => stu[key]))]\r\n\r\nexport default async store => {\r\n  let res = await get('user/students')\r\n  store.infoList.all_stus = res.map(stu => [\r\n    stu.edu_level,\r\n    stu.grade,\r\n    stu.academic,\r\n    stu.profession,\r\n    stu.class,\r\n    stu.real_name,\r\n    stu.stu_id,\r\n  ])\r\n  store.infoList.stu_table = store.infoList.all_stus\r\n  store.infoList.stu_table_filter = [\r\n    getFilter(res, 'edu_level'),\r\n    getFilter(res, 'grade'),\r\n    getFilter(res, 'academic'),\r\n    getFilter(res, 'profession'),\r\n    getFilter(res, 'class'),\r\n    [],\r\n    [],\r\n  ]\r\n}"]},"metadata":{},"sourceType":"module"}